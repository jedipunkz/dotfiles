{"provider_arguments":[],"resources":{"approle_auth_backend_login":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"role_id","kind":"String(R)","info":"The RoleID to log in with."},{"word":"secret_id","kind":"String(O)","info":"The SecretID to log in with."}],"attributes":[{"word":"accessor","kind":"String","info":"The accessor for the token."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"client_token","kind":"String","info":"The token."},{"word":"lease_duration","kind":"Int","info":"How long the token is valid for."},{"word":"lease_started","kind":"String","info":"The timestamp the lease started on, as determined by the machine running Terraform."},{"word":"metadata","kind":"Map","info":"Metadata associated with the token."},{"word":"policies","kind":"List","info":"Policies set on the token."},{"word":"renewable","kind":"Bool","info":"Whether the token is renewable or not."},{"word":"role_id","kind":"String","info":"The RoleID to log in with."},{"word":"secret_id","kind":"String","info":"The SecretID to log in with."},{"word":"id","kind":"String"}]},"approle_auth_backend_role":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"bind_secret_id","kind":"Bool(O)","info":"Whether or not to require secret_id to be present when logging in using this AppRole."},{"word":"bound_cidr_list","kind":"Set(O)","info":"List of CIDR blocks that can log in using the AppRole."},{"word":"period","kind":"Int(O)","info":"Number of seconds to set the TTL to for issued tokens upon renewal. Makes the token a periodic token, which will never expire as long as it is renewed before the TTL each period."},{"word":"policies","kind":"Set(O)","info":"Policies to be set on tokens issued using this AppRole."},{"word":"role_id","kind":"String(O)","info":"The RoleID of the role. Autogenerated if not set."},{"word":"role_name","kind":"String(R)","info":"Name of the role."},{"word":"secret_id_num_uses","kind":"Int(O)","info":"Number of times which a particular SecretID can be used to fetch a token from this AppRole, after which the SecretID will expire. Leaving this unset or setting it to 0 will allow unlimited uses."},{"word":"secret_id_ttl","kind":"Int(O)","info":"Number of seconds a SecretID remains valid for."},{"word":"token_max_ttl","kind":"Int(O)","info":"Number of seconds after which issued tokens can no longer be renewed."},{"word":"token_num_uses","kind":"Int(O)","info":"Number of times issued tokens can be used. Setting this to 0 or leaving it unset means unlimited uses."},{"word":"token_ttl","kind":"Int(O)","info":"Default number of seconds to set as the TTL for issued tokens and at renewal time."}],"attributes":[{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"bind_secret_id","kind":"Bool","info":"Whether or not to require secret_id to be present when logging in using this AppRole."},{"word":"bound_cidr_list","kind":"Set","info":"List of CIDR blocks that can log in using the AppRole."},{"word":"period","kind":"Int","info":"Number of seconds to set the TTL to for issued tokens upon renewal. Makes the token a periodic token, which will never expire as long as it is renewed before the TTL each period."},{"word":"policies","kind":"Set","info":"Policies to be set on tokens issued using this AppRole."},{"word":"role_id","kind":"String","info":"The RoleID of the role. Autogenerated if not set."},{"word":"role_name","kind":"String","info":"Name of the role."},{"word":"secret_id_num_uses","kind":"Int","info":"Number of times which a particular SecretID can be used to fetch a token from this AppRole, after which the SecretID will expire. Leaving this unset or setting it to 0 will allow unlimited uses."},{"word":"secret_id_ttl","kind":"Int","info":"Number of seconds a SecretID remains valid for."},{"word":"token_max_ttl","kind":"Int","info":"Number of seconds after which issued tokens can no longer be renewed."},{"word":"token_num_uses","kind":"Int","info":"Number of times issued tokens can be used. Setting this to 0 or leaving it unset means unlimited uses."},{"word":"token_ttl","kind":"Int","info":"Default number of seconds to set as the TTL for issued tokens and at renewal time."},{"word":"id","kind":"String"}]},"approle_auth_backend_role_secret_id":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"cidr_list","kind":"Set(O)","info":"List of CIDR blocks that can log in using the SecretID."},{"word":"metadata","kind":"String(O)","info":"JSON-encoded secret data to write."},{"word":"role_name","kind":"String(R)","info":"Name of the role."},{"word":"secret_id","kind":"String(O)","info":"The SecretID to be managed. If not specified, Vault auto-generates one."}],"attributes":[{"word":"accessor","kind":"String","info":"The unique ID used to access this SecretID."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"cidr_list","kind":"Set","info":"List of CIDR blocks that can log in using the SecretID."},{"word":"metadata","kind":"String","info":"JSON-encoded secret data to write."},{"word":"role_name","kind":"String","info":"Name of the role."},{"word":"secret_id","kind":"String","info":"The SecretID to be managed. If not specified, Vault auto-generates one."},{"word":"id","kind":"String"}]},"audit":{"arguments":[{"word":"description","kind":"String(O)","info":"Human-friendly description of the audit device"},{"word":"options","kind":"Map(R)","info":"Configuration options to pass to the audit device itself"},{"word":"path","kind":"String(O)","info":"Path in which to enable the audit device"},{"word":"type","kind":"String(R)","info":"Type of the audit device, such as 'file'"}],"attributes":[{"word":"description","kind":"String","info":"Human-friendly description of the audit device"},{"word":"options","kind":"Map","info":"Configuration options to pass to the audit device itself"},{"word":"path","kind":"String","info":"Path in which to enable the audit device"},{"word":"type","kind":"String","info":"Type of the audit device, such as 'file'"},{"word":"id","kind":"String"}]},"auth_backend":{"arguments":[{"word":"default_lease_ttl_seconds","kind":"Int(O)","info":"Default lease duration in seconds"},{"word":"description","kind":"String(O)","info":"The description of the auth backend"},{"word":"listing_visibility","kind":"String(O)","info":"Specifies whether to show this mount in the UI-specific listing endpoint"},{"word":"local","kind":"Bool(O)","info":"Specifies if the auth method is local only"},{"word":"max_lease_ttl_seconds","kind":"Int(O)","info":"Maximum possible lease duration in seconds"},{"word":"path","kind":"String(O)","info":"path to mount the backend. This defaults to the type."},{"word":"type","kind":"String(R)","info":"Name of the auth backend"}],"attributes":[{"word":"accessor","kind":"String","info":"The accessor of the auth backend"},{"word":"default_lease_ttl_seconds","kind":"Int","info":"Default lease duration in seconds"},{"word":"description","kind":"String","info":"The description of the auth backend"},{"word":"listing_visibility","kind":"String","info":"Specifies whether to show this mount in the UI-specific listing endpoint"},{"word":"local","kind":"Bool","info":"Specifies if the auth method is local only"},{"word":"max_lease_ttl_seconds","kind":"Int","info":"Maximum possible lease duration in seconds"},{"word":"path","kind":"String","info":"path to mount the backend. This defaults to the type."},{"word":"type","kind":"String","info":"Name of the auth backend"},{"word":"id","kind":"String"}]},"aws_auth_backend_cert":{"arguments":[{"word":"aws_public_cert","kind":"String(R)","info":"Base64 encoded AWS Public key required to verify PKCS7 signature of the EC2 instance metadata."},{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"cert_name","kind":"String(R)","info":"Name of the certificate to configure."},{"word":"type","kind":"String(O)","info":"The type of document that can be verified using the certificate. Must be either \"pkcs7\" or \"identity\"."}],"attributes":[{"word":"aws_public_cert","kind":"String","info":"Base64 encoded AWS Public key required to verify PKCS7 signature of the EC2 instance metadata."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"cert_name","kind":"String","info":"Name of the certificate to configure."},{"word":"type","kind":"String","info":"The type of document that can be verified using the certificate. Must be either \"pkcs7\" or \"identity\"."},{"word":"id","kind":"String"}]},"aws_auth_backend_client":{"arguments":[{"word":"access_key","kind":"String(O)","info":"AWS Access key with permissions to query AWS APIs."},{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"ec2_endpoint","kind":"String(O)","info":"URL to override the default generated endpoint for making AWS EC2 API calls."},{"word":"iam_endpoint","kind":"String(O)","info":"URL to override the default generated endpoint for making AWS IAM API calls."},{"word":"iam_server_id_header_value","kind":"String(O)","info":"The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method."},{"word":"secret_key","kind":"String(O)","info":"AWS Secret key with permissions to query AWS APIs."},{"word":"sts_endpoint","kind":"String(O)","info":"URL to override the default generated endpoint for making AWS STS API calls."}],"attributes":[{"word":"access_key","kind":"String","info":"AWS Access key with permissions to query AWS APIs."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"ec2_endpoint","kind":"String","info":"URL to override the default generated endpoint for making AWS EC2 API calls."},{"word":"iam_endpoint","kind":"String","info":"URL to override the default generated endpoint for making AWS IAM API calls."},{"word":"iam_server_id_header_value","kind":"String","info":"The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method."},{"word":"secret_key","kind":"String","info":"AWS Secret key with permissions to query AWS APIs."},{"word":"sts_endpoint","kind":"String","info":"URL to override the default generated endpoint for making AWS STS API calls."},{"word":"id","kind":"String"}]},"aws_auth_backend_identity_whitelist":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"disable_periodic_tidy","kind":"Bool(O)","info":"If true, disables the periodic tidying of the identiy whitelist entries."},{"word":"safety_buffer","kind":"Int(O)","info":"The amount of extra time that must have passed beyond the roletag expiration, before it's removed from backend storage."}],"attributes":[{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"disable_periodic_tidy","kind":"Bool","info":"If true, disables the periodic tidying of the identiy whitelist entries."},{"word":"safety_buffer","kind":"Int","info":"The amount of extra time that must have passed beyond the roletag expiration, before it's removed from backend storage."},{"word":"id","kind":"String"}]},"aws_auth_backend_login":{"arguments":[{"word":"backend","kind":"String(O)","info":"AWS Auth Backend to read the token from."},{"word":"iam_http_request_method","kind":"String(O)","info":"The HTTP method used in the signed request."},{"word":"iam_request_body","kind":"String(O)","info":"The Base64-encoded body of the signed request."},{"word":"iam_request_headers","kind":"String(O)","info":"The Base64-encoded, JSON serialized representation of the sts:GetCallerIdentity HTTP request headers."},{"word":"iam_request_url","kind":"String(O)","info":"The Base64-encoded HTTP URL used in the signed request."},{"word":"identity","kind":"String(O)","info":"Base64-encoded EC2 instance identity document to authenticate with."},{"word":"nonce","kind":"String(O)","info":"The nonce to be used for subsequent login requests."},{"word":"pkcs7","kind":"String(O)","info":"PKCS7 signature of the identity document to authenticate with, with all newline characters removed."},{"word":"role","kind":"String(O)","info":"AWS Auth Role to read the token from."},{"word":"signature","kind":"String(O)","info":"Base64-encoded SHA256 RSA signature of the instance identtiy document to authenticate with."}],"attributes":[{"word":"accessor","kind":"String","info":"The accessor returned from Vault for this token."},{"word":"auth_type","kind":"String","info":"The auth method used to generate this token."},{"word":"backend","kind":"String","info":"AWS Auth Backend to read the token from."},{"word":"client_token","kind":"String","info":"The token returned by Vault."},{"word":"iam_http_request_method","kind":"String","info":"The HTTP method used in the signed request."},{"word":"iam_request_body","kind":"String","info":"The Base64-encoded body of the signed request."},{"word":"iam_request_headers","kind":"String","info":"The Base64-encoded, JSON serialized representation of the sts:GetCallerIdentity HTTP request headers."},{"word":"iam_request_url","kind":"String","info":"The Base64-encoded HTTP URL used in the signed request."},{"word":"identity","kind":"String","info":"Base64-encoded EC2 instance identity document to authenticate with."},{"word":"lease_duration","kind":"Int","info":"Lease duration in seconds relative to the time in lease_start_time."},{"word":"lease_start_time","kind":"String","info":"Time at which the lease was read, using the clock of the system where Terraform was running"},{"word":"metadata","kind":"Map","info":"The metadata reported by the Vault server."},{"word":"nonce","kind":"String","info":"The nonce to be used for subsequent login requests."},{"word":"pkcs7","kind":"String","info":"PKCS7 signature of the identity document to authenticate with, with all newline characters removed."},{"word":"policies","kind":"List","info":"The policies assigned to this token."},{"word":"renewable","kind":"Bool","info":"True if the duration of this lease can be extended through renewal."},{"word":"role","kind":"String","info":"AWS Auth Role to read the token from."},{"word":"signature","kind":"String","info":"Base64-encoded SHA256 RSA signature of the instance identtiy document to authenticate with."},{"word":"id","kind":"String"}]},"aws_auth_backend_role":{"arguments":[{"word":"allow_instance_migration","kind":"Bool(O)","info":"When true, allows migration of the underlying instance where the client resides. Use with caution."},{"word":"auth_type","kind":"String(O)","info":"The auth type permitted for this role."},{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"bound_account_id","kind":"String(O)","info":"Only EC2 instances with this account ID in their identity document will be permitted to log in."},{"word":"bound_account_ids","kind":"List(O)","info":"Only EC2 instances with this account ID in their identity document will be permitted to log in."},{"word":"bound_ami_id","kind":"String(O)","info":"Only EC2 instances using this AMI ID will be permitted to log in."},{"word":"bound_ami_ids","kind":"List(O)","info":"Only EC2 instances using this AMI ID will be permitted to log in."},{"word":"bound_ec2_instance_id","kind":"List(O)","info":"Only EC2 instances that match this instance ID will be permitted to log in."},{"word":"bound_ec2_instance_ids","kind":"List(O)","info":"Only EC2 instances that match this instance ID will be permitted to log in."},{"word":"bound_iam_instance_profile_arn","kind":"String(O)","info":"Only EC2 instances associated with an IAM instance profile ARN that matches this value will be permitted to log in."},{"word":"bound_iam_instance_profile_arns","kind":"List(O)","info":"Only EC2 instances associated with an IAM instance profile ARN that matches this value will be permitted to log in."},{"word":"bound_iam_principal_arn","kind":"String(O)","info":"The IAM principal that must be authenticated using the iam auth method."},{"word":"bound_iam_principal_arns","kind":"List(O)","info":"The IAM principal that must be authenticated using the iam auth method."},{"word":"bound_iam_role_arn","kind":"String(O)","info":"Only EC2 instances that match this IAM role ARN will be permitted to log in."},{"word":"bound_iam_role_arns","kind":"List(O)","info":"Only EC2 instances that match this IAM role ARN will be permitted to log in."},{"word":"bound_region","kind":"String(O)","info":"Only EC2 instances in this region will be permitted to log in."},{"word":"bound_regions","kind":"List(O)","info":"Only EC2 instances in this region will be permitted to log in."},{"word":"bound_subnet_id","kind":"String(O)","info":"Only EC2 instances associated with this subnet ID will be permitted to log in."},{"word":"bound_subnet_ids","kind":"List(O)","info":"Only EC2 instances associated with this subnet ID will be permitted to log in."},{"word":"bound_vpc_id","kind":"String(O)","info":"Only EC2 instances associated with this VPC ID will be permitted to log in."},{"word":"bound_vpc_ids","kind":"List(O)","info":"Only EC2 instances associated with this VPC ID will be permitted to log in."},{"word":"disallow_reauthentication","kind":"Bool(O)","info":"When true, only allows a single token to be granted per instance ID."},{"word":"inferred_aws_region","kind":"String(O)","info":"The region to search for the inferred entities in."},{"word":"inferred_entity_type","kind":"String(O)","info":"The type of inferencing Vault should do."},{"word":"max_ttl","kind":"Int(O)","info":"The maximum allowed lifetime of tokens issued using this role, provided as the number of seconds."},{"word":"period","kind":"Int(O)","info":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this field. The maximum allowed lifetime of token issued using this role. Specified as a number of seconds."},{"word":"policies","kind":"List(O)","info":"Policies to be set on tokens issued using this role."},{"word":"resolve_aws_unique_ids","kind":"Bool(O)","info":"Whether or not Vault should resolve the bound_iam_principal_arn to an AWS Unique ID. When true, deleting a principal and recreating it with the same name won't automatically grant the new principal the same roles in Vault that the old principal had."},{"word":"role","kind":"String(R)","info":"Name of the role."},{"word":"role_tag","kind":"String(O)","info":"The key of the tag on EC2 instance to use for role tags."},{"word":"ttl","kind":"Int(O)","info":"The TTL period of tokens issued using this role, provided as the number of seconds."}],"attributes":[{"word":"allow_instance_migration","kind":"Bool","info":"When true, allows migration of the underlying instance where the client resides. Use with caution."},{"word":"auth_type","kind":"String","info":"The auth type permitted for this role."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"bound_account_id","kind":"String","info":"Only EC2 instances with this account ID in their identity document will be permitted to log in."},{"word":"bound_account_ids","kind":"List","info":"Only EC2 instances with this account ID in their identity document will be permitted to log in."},{"word":"bound_ami_id","kind":"String","info":"Only EC2 instances using this AMI ID will be permitted to log in."},{"word":"bound_ami_ids","kind":"List","info":"Only EC2 instances using this AMI ID will be permitted to log in."},{"word":"bound_ec2_instance_id","kind":"List","info":"Only EC2 instances that match this instance ID will be permitted to log in."},{"word":"bound_ec2_instance_ids","kind":"List","info":"Only EC2 instances that match this instance ID will be permitted to log in."},{"word":"bound_iam_instance_profile_arn","kind":"String","info":"Only EC2 instances associated with an IAM instance profile ARN that matches this value will be permitted to log in."},{"word":"bound_iam_instance_profile_arns","kind":"List","info":"Only EC2 instances associated with an IAM instance profile ARN that matches this value will be permitted to log in."},{"word":"bound_iam_principal_arn","kind":"String","info":"The IAM principal that must be authenticated using the iam auth method."},{"word":"bound_iam_principal_arns","kind":"List","info":"The IAM principal that must be authenticated using the iam auth method."},{"word":"bound_iam_role_arn","kind":"String","info":"Only EC2 instances that match this IAM role ARN will be permitted to log in."},{"word":"bound_iam_role_arns","kind":"List","info":"Only EC2 instances that match this IAM role ARN will be permitted to log in."},{"word":"bound_region","kind":"String","info":"Only EC2 instances in this region will be permitted to log in."},{"word":"bound_regions","kind":"List","info":"Only EC2 instances in this region will be permitted to log in."},{"word":"bound_subnet_id","kind":"String","info":"Only EC2 instances associated with this subnet ID will be permitted to log in."},{"word":"bound_subnet_ids","kind":"List","info":"Only EC2 instances associated with this subnet ID will be permitted to log in."},{"word":"bound_vpc_id","kind":"String","info":"Only EC2 instances associated with this VPC ID will be permitted to log in."},{"word":"bound_vpc_ids","kind":"List","info":"Only EC2 instances associated with this VPC ID will be permitted to log in."},{"word":"disallow_reauthentication","kind":"Bool","info":"When true, only allows a single token to be granted per instance ID."},{"word":"inferred_aws_region","kind":"String","info":"The region to search for the inferred entities in."},{"word":"inferred_entity_type","kind":"String","info":"The type of inferencing Vault should do."},{"word":"max_ttl","kind":"Int","info":"The maximum allowed lifetime of tokens issued using this role, provided as the number of seconds."},{"word":"period","kind":"Int","info":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this field. The maximum allowed lifetime of token issued using this role. Specified as a number of seconds."},{"word":"policies","kind":"List","info":"Policies to be set on tokens issued using this role."},{"word":"resolve_aws_unique_ids","kind":"Bool","info":"Whether or not Vault should resolve the bound_iam_principal_arn to an AWS Unique ID. When true, deleting a principal and recreating it with the same name won't automatically grant the new principal the same roles in Vault that the old principal had."},{"word":"role","kind":"String","info":"Name of the role."},{"word":"role_tag","kind":"String","info":"The key of the tag on EC2 instance to use for role tags."},{"word":"ttl","kind":"Int","info":"The TTL period of tokens issued using this role, provided as the number of seconds."},{"word":"id","kind":"String"}]},"aws_auth_backend_role_tag":{"arguments":[{"word":"allow_instance_migration","kind":"Bool(O)","info":"Allows migration of the underlying instance where the client resides."},{"word":"backend","kind":"String(O)","info":"AWS auth backend to read tags from."},{"word":"disallow_reauthentication","kind":"Bool(O)","info":"Only allow a single token to be granted per instance ID."},{"word":"instance_id","kind":"String(O)","info":"Instance ID for which this tag is intended. The created tag can only be used by the instance with the given ID."},{"word":"max_ttl","kind":"String(O)","info":"The maximum allowed lifetime of tokens issued using this role."},{"word":"policies","kind":"List(O)","info":"Policies to be associated with the tag."},{"word":"role","kind":"String(R)","info":"Name of the role."}],"attributes":[{"word":"allow_instance_migration","kind":"Bool","info":"Allows migration of the underlying instance where the client resides."},{"word":"backend","kind":"String","info":"AWS auth backend to read tags from."},{"word":"disallow_reauthentication","kind":"Bool","info":"Only allow a single token to be granted per instance ID."},{"word":"instance_id","kind":"String","info":"Instance ID for which this tag is intended. The created tag can only be used by the instance with the given ID."},{"word":"max_ttl","kind":"String","info":"The maximum allowed lifetime of tokens issued using this role."},{"word":"policies","kind":"List","info":"Policies to be associated with the tag."},{"word":"role","kind":"String","info":"Name of the role."},{"word":"tag_key","kind":"String"},{"word":"tag_value","kind":"String"},{"word":"id","kind":"String"}]},"aws_auth_backend_roletag_blacklist":{"arguments":[{"word":"backend","kind":"String(R)","info":"Unique name of the auth backend to configure."},{"word":"disable_periodic_tidy","kind":"Bool(O)","info":"If true, disables the periodic tidying of the roletag blacklist entries."},{"word":"safety_buffer","kind":"Int(O)","info":"The amount of extra time that must have passed beyond the roletag expiration, before it's removed from backend storage."}],"attributes":[{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"disable_periodic_tidy","kind":"Bool","info":"If true, disables the periodic tidying of the roletag blacklist entries."},{"word":"safety_buffer","kind":"Int","info":"The amount of extra time that must have passed beyond the roletag expiration, before it's removed from backend storage."},{"word":"id","kind":"String"}]},"aws_auth_backend_sts_role":{"arguments":[{"word":"account_id","kind":"String(R)","info":"AWS account ID to be associated with STS role."},{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"sts_role","kind":"String(R)","info":"AWS ARN for STS role to be assumed when interacting with the account specified."}],"attributes":[{"word":"account_id","kind":"String","info":"AWS account ID to be associated with STS role."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"sts_role","kind":"String","info":"AWS ARN for STS role to be assumed when interacting with the account specified."},{"word":"id","kind":"String"}]},"aws_secret_backend":{"arguments":[{"word":"access_key","kind":"String(R)","info":"The AWS Access Key ID to use when generating new credentials."},{"word":"default_lease_ttl_seconds","kind":"Int(O)","info":"Default lease duration for secrets in seconds"},{"word":"description","kind":"String(O)","info":"Human-friendly description of the mount for the backend."},{"word":"max_lease_ttl_seconds","kind":"Int(O)","info":"Maximum possible lease duration for secrets in seconds"},{"word":"path","kind":"String(O)","info":"Path to mount the backend at."},{"word":"region","kind":"String(O)","info":"The AWS region to make API calls against. Defaults to us-east-1."},{"word":"secret_key","kind":"String(R)","info":"The AWS Secret Access Key to use when generating new credentials."}],"attributes":[{"word":"access_key","kind":"String","info":"The AWS Access Key ID to use when generating new credentials."},{"word":"default_lease_ttl_seconds","kind":"Int","info":"Default lease duration for secrets in seconds"},{"word":"description","kind":"String","info":"Human-friendly description of the mount for the backend."},{"word":"max_lease_ttl_seconds","kind":"Int","info":"Maximum possible lease duration for secrets in seconds"},{"word":"path","kind":"String","info":"Path to mount the backend at."},{"word":"region","kind":"String","info":"The AWS region to make API calls against. Defaults to us-east-1."},{"word":"secret_key","kind":"String","info":"The AWS Secret Access Key to use when generating new credentials."},{"word":"id","kind":"String"}]},"aws_secret_backend_role":{"arguments":[{"word":"backend","kind":"String(R)","info":"The path of the AWS Secret Backend the role belongs to."},{"word":"credential_type","kind":"String(R)","info":"Role credential type."},{"word":"name","kind":"String(R)","info":"Unique name for the role."},{"word":"policy","kind":"String(O)","info":"IAM policy the role should use in JSON format."},{"word":"policy_arn","kind":"String(O)","info":"ARN for an existing IAM policy the role should use."},{"word":"policy_arns","kind":"List(O)","info":"ARN for an existing IAM policy the role should use."},{"word":"policy_document","kind":"String(O)","info":"IAM policy the role should use in JSON format."}],"attributes":[{"word":"backend","kind":"String","info":"The path of the AWS Secret Backend the role belongs to."},{"word":"credential_type","kind":"String","info":"Role credential type."},{"word":"name","kind":"String","info":"Unique name for the role."},{"word":"policy","kind":"String","info":"IAM policy the role should use in JSON format."},{"word":"policy_arn","kind":"String","info":"ARN for an existing IAM policy the role should use."},{"word":"policy_arns","kind":"List","info":"ARN for an existing IAM policy the role should use."},{"word":"policy_document","kind":"String","info":"IAM policy the role should use in JSON format."},{"word":"id","kind":"String"}]},"azure_auth_backend_config":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"client_id","kind":"String(O)","info":"The client id for credentials to query the Azure APIs. Currently read permissions to query compute resources are required."},{"word":"client_secret","kind":"String(O)","info":"The client secret for credentials to query the Azure APIs"},{"word":"environment","kind":"String(O)","info":"The Azure cloud environment. Valid values: AzurePublicCloud, AzureUSGovernmentCloud, AzureChinaCloud, AzureGermanCloud."},{"word":"resource","kind":"String(R)","info":"The configured URL for the application registered in Azure Active Directory."},{"word":"tenant_id","kind":"String(R)","info":"The tenant id for the Azure Active Directory organization."}],"attributes":[{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"client_id","kind":"String","info":"The client id for credentials to query the Azure APIs. Currently read permissions to query compute resources are required."},{"word":"client_secret","kind":"String","info":"The client secret for credentials to query the Azure APIs"},{"word":"environment","kind":"String","info":"The Azure cloud environment. Valid values: AzurePublicCloud, AzureUSGovernmentCloud, AzureChinaCloud, AzureGermanCloud."},{"word":"resource","kind":"String","info":"The configured URL for the application registered in Azure Active Directory."},{"word":"tenant_id","kind":"String","info":"The tenant id for the Azure Active Directory organization."},{"word":"id","kind":"String"}]},"azure_auth_backend_role":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"bound_group_ids","kind":"List(O)","info":"The list of group ids that login is restricted to."},{"word":"bound_locations","kind":"List(O)","info":"The list of locations that login is restricted to."},{"word":"bound_resource_groups","kind":"List(O)","info":"The list of resource groups that login is restricted to."},{"word":"bound_scale_sets","kind":"List(O)","info":"The list of scale set names that the login is restricted to."},{"word":"bound_service_principal_ids","kind":"List(O)","info":"The list of Service Principal IDs that login is restricted to."},{"word":"bound_subscription_ids","kind":"List(O)","info":"The list of subscription IDs that login is restricted to."},{"word":"max_ttl","kind":"Int(O)","info":"The maximum allowed lifetime of tokens issued using this role, provided as the number of seconds."},{"word":"period","kind":"Int(O)","info":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this field. The maximum allowed lifetime of token issued using this role. Specified as a number of seconds."},{"word":"policies","kind":"List(O)","info":"Policies to be set on tokens issued using this role."},{"word":"role","kind":"String(R)","info":"Name of the role."},{"word":"ttl","kind":"Int(O)","info":"The TTL period of tokens issued using this role, provided as the number of seconds."}],"attributes":[{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"bound_group_ids","kind":"List","info":"The list of group ids that login is restricted to."},{"word":"bound_locations","kind":"List","info":"The list of locations that login is restricted to."},{"word":"bound_resource_groups","kind":"List","info":"The list of resource groups that login is restricted to."},{"word":"bound_scale_sets","kind":"List","info":"The list of scale set names that the login is restricted to."},{"word":"bound_service_principal_ids","kind":"List","info":"The list of Service Principal IDs that login is restricted to."},{"word":"bound_subscription_ids","kind":"List","info":"The list of subscription IDs that login is restricted to."},{"word":"max_ttl","kind":"Int","info":"The maximum allowed lifetime of tokens issued using this role, provided as the number of seconds."},{"word":"period","kind":"Int","info":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this field. The maximum allowed lifetime of token issued using this role. Specified as a number of seconds."},{"word":"policies","kind":"List","info":"Policies to be set on tokens issued using this role."},{"word":"role","kind":"String","info":"Name of the role."},{"word":"ttl","kind":"Int","info":"The TTL period of tokens issued using this role, provided as the number of seconds."},{"word":"id","kind":"String"}]},"cert_auth_backend_role":{"arguments":[{"word":"allowed_common_names","kind":"Set(O)"},{"word":"allowed_dns_sans","kind":"Set(O)"},{"word":"allowed_email_sans","kind":"Set(O)"},{"word":"allowed_names","kind":"Set(O)"},{"word":"allowed_organization_units","kind":"Set(O)"},{"word":"allowed_uri_sans","kind":"Set(O)"},{"word":"backend","kind":"String(O)"},{"word":"bound_cidrs","kind":"Set(O)"},{"word":"certificate","kind":"String(R)"},{"word":"display_name","kind":"String(O)"},{"word":"max_ttl","kind":"String(O)"},{"word":"name","kind":"String(R)"},{"word":"period","kind":"String(O)"},{"word":"policies","kind":"Set(O)"},{"word":"required_extensions","kind":"Set(O)"},{"word":"ttl","kind":"String(O)"}],"attributes":[{"word":"allowed_common_names","kind":"Set"},{"word":"allowed_dns_sans","kind":"Set"},{"word":"allowed_email_sans","kind":"Set"},{"word":"allowed_names","kind":"Set"},{"word":"allowed_organization_units","kind":"Set"},{"word":"allowed_uri_sans","kind":"Set"},{"word":"backend","kind":"String"},{"word":"bound_cidrs","kind":"Set"},{"word":"certificate","kind":"String"},{"word":"display_name","kind":"String"},{"word":"max_ttl","kind":"String"},{"word":"name","kind":"String"},{"word":"period","kind":"String"},{"word":"policies","kind":"Set"},{"word":"required_extensions","kind":"Set"},{"word":"ttl","kind":"String"},{"word":"id","kind":"String"}]},"consul_secret_backend":{"arguments":[{"word":"address","kind":"String(R)","info":"Specifies the address of the Consul instance, provided as \"host:port\" like \"127.0.0.1:8500\"."},{"word":"default_lease_ttl_seconds","kind":"Int(O)","info":"Default lease duration for secrets in seconds"},{"word":"description","kind":"String(O)","info":"Human-friendly description of the mount for the backend."},{"word":"max_lease_ttl_seconds","kind":"Int(O)","info":"Maximum possible lease duration for secrets in seconds"},{"word":"path","kind":"String(O)","info":"Unique name of the Vault Consul mount to configure"},{"word":"scheme","kind":"String(O)","info":"Specifies the URL scheme to use. Defaults to \"http\"."},{"word":"token","kind":"String(R)","info":"Specifies the Consul ACL token to use. This must be a management type token."}],"attributes":[{"word":"address","kind":"String","info":"Specifies the address of the Consul instance, provided as \"host:port\" like \"127.0.0.1:8500\"."},{"word":"default_lease_ttl_seconds","kind":"Int","info":"Default lease duration for secrets in seconds"},{"word":"description","kind":"String","info":"Human-friendly description of the mount for the backend."},{"word":"max_lease_ttl_seconds","kind":"Int","info":"Maximum possible lease duration for secrets in seconds"},{"word":"path","kind":"String","info":"Unique name of the Vault Consul mount to configure"},{"word":"scheme","kind":"String","info":"Specifies the URL scheme to use. Defaults to \"http\"."},{"word":"token","kind":"String","info":"Specifies the Consul ACL token to use. This must be a management type token."},{"word":"id","kind":"String"}]},"database_secret_backend_connection":{"arguments":[{"word":"allowed_roles","kind":"List(O)","info":"A list of roles that are allowed to use this connection."},{"word":"backend","kind":"String(R)","info":"Unique name of the Vault mount to configure."},{"word":"cassandra","kind":"List(O)(B)","info":"Connection parameters for the cassandra-database-plugin plugin.","subblock":[{"word":"connect_timeout","kind":"Int(O)","info":"The number of seconds to use as a connection timeout."},{"word":"hosts","kind":"List(O)","info":"Cassandra hosts to connect to."},{"word":"insecure_tls","kind":"Bool(O)","info":"Whether to skip verification of the server certificate when using TLS."},{"word":"password","kind":"String(O)","info":"The password to use when authenticating with Cassandra."},{"word":"pem_bundle","kind":"String(O)","info":"Concatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate."},{"word":"pem_json","kind":"String(O)","info":"Specifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate."},{"word":"port","kind":"Int(O)","info":"The transport port to use to connect to Cassandra."},{"word":"protocol_version","kind":"Int(O)","info":"The CQL protocol version to use."},{"word":"tls","kind":"Bool(O)","info":"Whether to use TLS when connecting to Cassandra."},{"word":"username","kind":"String(O)","info":"The username to use when authenticating with Cassandra."}]},{"word":"data","kind":"Map(O)","info":"A map of sensitive data to pass to the endpoint. Useful for templated connection strings."},{"word":"hana","kind":"List(O)(B)","info":"Connection parameters for the hana-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String(O)","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int(O)","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int(O)","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int(O)","info":"Maximum number of open connections to the database."}]},{"word":"mongodb","kind":"List(O)(B)","info":"Connection parameters for the mongodb-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String(O)","info":"Connection string to use to connect to the database."}]},{"word":"mssql","kind":"List(O)(B)","info":"Connection parameters for the mssql-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String(O)","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int(O)","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int(O)","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int(O)","info":"Maximum number of open connections to the database."}]},{"word":"mysql","kind":"List(O)(B)","info":"Connection parameters for the mysql-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String(O)","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int(O)","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int(O)","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int(O)","info":"Maximum number of open connections to the database."}]},{"word":"mysql_aurora","kind":"List(O)(B)","info":"Connection parameters for the mysql-aurora-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String(O)","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int(O)","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int(O)","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int(O)","info":"Maximum number of open connections to the database."}]},{"word":"mysql_legacy","kind":"List(O)(B)","info":"Connection parameters for the mysql-legacy-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String(O)","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int(O)","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int(O)","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int(O)","info":"Maximum number of open connections to the database."}]},{"word":"mysql_rds","kind":"List(O)(B)","info":"Connection parameters for the mysql-rds-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String(O)","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int(O)","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int(O)","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int(O)","info":"Maximum number of open connections to the database."}]},{"word":"name","kind":"String(R)","info":"Name of the database connection."},{"word":"oracle","kind":"List(O)(B)","info":"Connection parameters for the oracle-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String(O)","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int(O)","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int(O)","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int(O)","info":"Maximum number of open connections to the database."}]},{"word":"postgresql","kind":"List(O)(B)","info":"Connection parameters for the postgresql-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String(O)","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int(O)","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int(O)","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int(O)","info":"Maximum number of open connections to the database."}]},{"word":"verify_connection","kind":"Bool(O)","info":"Specifies if the connection is verified during initial configuration."}],"attributes":[{"word":"allowed_roles","kind":"List","info":"A list of roles that are allowed to use this connection."},{"word":"backend","kind":"String","info":"Unique name of the Vault mount to configure."},{"word":"cassandra","kind":"List(B)","info":"Connection parameters for the cassandra-database-plugin plugin.","subblock":[{"word":"connect_timeout","kind":"Int","info":"The number of seconds to use as a connection timeout."},{"word":"hosts","kind":"List","info":"Cassandra hosts to connect to."},{"word":"insecure_tls","kind":"Bool","info":"Whether to skip verification of the server certificate when using TLS."},{"word":"password","kind":"String","info":"The password to use when authenticating with Cassandra."},{"word":"pem_bundle","kind":"String","info":"Concatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate."},{"word":"pem_json","kind":"String","info":"Specifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate."},{"word":"port","kind":"Int","info":"The transport port to use to connect to Cassandra."},{"word":"protocol_version","kind":"Int","info":"The CQL protocol version to use."},{"word":"tls","kind":"Bool","info":"Whether to use TLS when connecting to Cassandra."},{"word":"username","kind":"String","info":"The username to use when authenticating with Cassandra."},{"word":"id","kind":"String"}]},{"word":"data","kind":"Map","info":"A map of sensitive data to pass to the endpoint. Useful for templated connection strings."},{"word":"hana","kind":"List(B)","info":"Connection parameters for the hana-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int","info":"Maximum number of open connections to the database."},{"word":"id","kind":"String"}]},{"word":"mongodb","kind":"List(B)","info":"Connection parameters for the mongodb-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String","info":"Connection string to use to connect to the database."},{"word":"id","kind":"String"}]},{"word":"mssql","kind":"List(B)","info":"Connection parameters for the mssql-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int","info":"Maximum number of open connections to the database."},{"word":"id","kind":"String"}]},{"word":"mysql","kind":"List(B)","info":"Connection parameters for the mysql-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int","info":"Maximum number of open connections to the database."},{"word":"id","kind":"String"}]},{"word":"mysql_aurora","kind":"List(B)","info":"Connection parameters for the mysql-aurora-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int","info":"Maximum number of open connections to the database."},{"word":"id","kind":"String"}]},{"word":"mysql_legacy","kind":"List(B)","info":"Connection parameters for the mysql-legacy-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int","info":"Maximum number of open connections to the database."},{"word":"id","kind":"String"}]},{"word":"mysql_rds","kind":"List(B)","info":"Connection parameters for the mysql-rds-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int","info":"Maximum number of open connections to the database."},{"word":"id","kind":"String"}]},{"word":"name","kind":"String","info":"Name of the database connection."},{"word":"oracle","kind":"List(B)","info":"Connection parameters for the oracle-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int","info":"Maximum number of open connections to the database."},{"word":"id","kind":"String"}]},{"word":"postgresql","kind":"List(B)","info":"Connection parameters for the postgresql-database-plugin plugin.","subblock":[{"word":"connection_url","kind":"String","info":"Connection string to use to connect to the database."},{"word":"max_connection_lifetime","kind":"Int","info":"Maximum number of seconds a connection may be reused."},{"word":"max_idle_connections","kind":"Int","info":"Maximum number of idle connections to the database."},{"word":"max_open_connections","kind":"Int","info":"Maximum number of open connections to the database."},{"word":"id","kind":"String"}]},{"word":"verify_connection","kind":"Bool","info":"Specifies if the connection is verified during initial configuration."},{"word":"id","kind":"String"}]},"database_secret_backend_role":{"arguments":[{"word":"backend","kind":"String(R)","info":"The path of the Database Secret Backend the role belongs to."},{"word":"creation_statements","kind":"String(R)","info":"Database statements to execute to create and configure a user."},{"word":"db_name","kind":"String(R)","info":"Database connection to use for this role."},{"word":"default_ttl","kind":"Int(O)","info":"Default TTL for leases associated with this role, in seconds."},{"word":"max_ttl","kind":"Int(O)","info":"Maximum TTL for leases associated with this role, in seconds."},{"word":"name","kind":"String(R)","info":"Unique name for the role."},{"word":"renew_statements","kind":"String(O)","info":"Database statements to execute to renew a user."},{"word":"revocation_statements","kind":"String(O)","info":"Database statements to execute to revoke a user."},{"word":"rollback_statements","kind":"String(O)","info":"Database statements to execute to rollback a create operation in the event of an error."}],"attributes":[{"word":"backend","kind":"String","info":"The path of the Database Secret Backend the role belongs to."},{"word":"creation_statements","kind":"String","info":"Database statements to execute to create and configure a user."},{"word":"db_name","kind":"String","info":"Database connection to use for this role."},{"word":"default_ttl","kind":"Int","info":"Default TTL for leases associated with this role, in seconds."},{"word":"max_ttl","kind":"Int","info":"Maximum TTL for leases associated with this role, in seconds."},{"word":"name","kind":"String","info":"Unique name for the role."},{"word":"renew_statements","kind":"String","info":"Database statements to execute to renew a user."},{"word":"revocation_statements","kind":"String","info":"Database statements to execute to revoke a user."},{"word":"rollback_statements","kind":"String","info":"Database statements to execute to rollback a create operation in the event of an error."},{"word":"id","kind":"String"}]},"egp_policy":{"arguments":[{"word":"enforcement_level","kind":"String(R)","info":"Enforcement level of Sentinel policy. Can be one of: 'advisory', 'soft-mandatory' or 'hard-mandatory'"},{"word":"name","kind":"String(R)","info":"Name of the policy"},{"word":"paths","kind":"List(R)","info":"List of paths to which the policy will be applied"},{"word":"policy","kind":"String(R)","info":"The policy document"}],"attributes":[{"word":"enforcement_level","kind":"String","info":"Enforcement level of Sentinel policy. Can be one of: 'advisory', 'soft-mandatory' or 'hard-mandatory'"},{"word":"name","kind":"String","info":"Name of the policy"},{"word":"paths","kind":"List","info":"List of paths to which the policy will be applied"},{"word":"policy","kind":"String","info":"The policy document"},{"word":"id","kind":"String"}]},"gcp_auth_backend":{"arguments":[{"word":"client_email","kind":"String(O)"},{"word":"client_id","kind":"String(O)"},{"word":"credentials","kind":"String(R)"},{"word":"description","kind":"String(O)"},{"word":"path","kind":"String(O)"},{"word":"private_key_id","kind":"String(O)"},{"word":"project_id","kind":"String(O)"}],"attributes":[{"word":"client_email","kind":"String"},{"word":"client_id","kind":"String"},{"word":"credentials","kind":"String"},{"word":"description","kind":"String"},{"word":"path","kind":"String"},{"word":"private_key_id","kind":"String"},{"word":"project_id","kind":"String"},{"word":"id","kind":"String"}]},"gcp_auth_backend_role":{"arguments":[{"word":"add_group_aliases","kind":"Bool(O)"},{"word":"allow_gce_inference","kind":"Bool(O)"},{"word":"backend","kind":"String(O)"},{"word":"bound_instance_groups","kind":"Set(O)"},{"word":"bound_labels","kind":"Set(O)"},{"word":"bound_projects","kind":"Set(O)"},{"word":"bound_regions","kind":"Set(O)"},{"word":"bound_service_accounts","kind":"Set(O)"},{"word":"bound_zones","kind":"Set(O)"},{"word":"max_jwt_exp","kind":"String(O)"},{"word":"max_ttl","kind":"String(O)"},{"word":"period","kind":"String(O)"},{"word":"policies","kind":"Set(O)"},{"word":"project_id","kind":"String(O)"},{"word":"role","kind":"String(R)"},{"word":"ttl","kind":"String(O)"},{"word":"type","kind":"String(R)"}],"attributes":[{"word":"add_group_aliases","kind":"Bool"},{"word":"allow_gce_inference","kind":"Bool"},{"word":"backend","kind":"String"},{"word":"bound_instance_groups","kind":"Set"},{"word":"bound_labels","kind":"Set"},{"word":"bound_projects","kind":"Set"},{"word":"bound_regions","kind":"Set"},{"word":"bound_service_accounts","kind":"Set"},{"word":"bound_zones","kind":"Set"},{"word":"max_jwt_exp","kind":"String"},{"word":"max_ttl","kind":"String"},{"word":"period","kind":"String"},{"word":"policies","kind":"Set"},{"word":"project_id","kind":"String"},{"word":"role","kind":"String"},{"word":"ttl","kind":"String"},{"word":"type","kind":"String"},{"word":"id","kind":"String"}]},"gcp_secret_backend":{"arguments":[{"word":"credentials","kind":"String(O)","info":"JSON-encoded credentials to use to connect to GCP"},{"word":"default_lease_ttl_seconds","kind":"Int(O)","info":"Default lease duration for secrets in seconds"},{"word":"description","kind":"String(O)","info":"Human-friendly description of the mount for the backend."},{"word":"max_lease_ttl_seconds","kind":"Int(O)","info":"Maximum possible lease duration for secrets in seconds"},{"word":"path","kind":"String(O)","info":"Path to mount the backend at."}],"attributes":[{"word":"credentials","kind":"String","info":"JSON-encoded credentials to use to connect to GCP"},{"word":"default_lease_ttl_seconds","kind":"Int","info":"Default lease duration for secrets in seconds"},{"word":"description","kind":"String","info":"Human-friendly description of the mount for the backend."},{"word":"max_lease_ttl_seconds","kind":"Int","info":"Maximum possible lease duration for secrets in seconds"},{"word":"path","kind":"String","info":"Path to mount the backend at."},{"word":"id","kind":"String"}]},"gcp_secret_roleset":{"arguments":[{"word":"backend","kind":"String(R)","info":"Path where the GCP secrets engine is mounted."},{"word":"binding","kind":"Set(R)(B)","subblock":[{"word":"resource","kind":"String(R)","info":"Resource name"},{"word":"roles","kind":"Set(R)","info":"List of roles to apply to the resource"}]},{"word":"project","kind":"String(R)","info":"Name of the GCP project that this roleset's service account will belong to. "},{"word":"roleset","kind":"String(R)","info":"Name of the RoleSet to create"},{"word":"secret_type","kind":"String(O)","info":"Type of secret generated for this role set. Defaults to `access_token`. Accepted values: `access_token`, `service_account_key`"},{"word":"token_scopes","kind":"Set(O)","info":"List of OAuth scopes to assign to `access_token` secrets generated under this role set (`access_token` role sets only) "}],"attributes":[{"word":"backend","kind":"String","info":"Path where the GCP secrets engine is mounted."},{"word":"binding","kind":"Set(B)","subblock":[{"word":"resource","kind":"String","info":"Resource name"},{"word":"roles","kind":"Set","info":"List of roles to apply to the resource"},{"word":"id","kind":"String"}]},{"word":"project","kind":"String","info":"Name of the GCP project that this roleset's service account will belong to. "},{"word":"roleset","kind":"String","info":"Name of the RoleSet to create"},{"word":"secret_type","kind":"String","info":"Type of secret generated for this role set. Defaults to `access_token`. Accepted values: `access_token`, `service_account_key`"},{"word":"service_account_email","kind":"String","info":"Email of the service account created by Vault for this Roleset"},{"word":"token_scopes","kind":"Set","info":"List of OAuth scopes to assign to `access_token` secrets generated under this role set (`access_token` role sets only) "},{"word":"id","kind":"String"}]},"generic_endpoint":{"arguments":[{"word":"data_json","kind":"String(R)","info":"JSON-encoded data to write."},{"word":"disable_delete","kind":"Bool(O)","info":"Don't attempt to delete the path from Vault if true"},{"word":"disable_read","kind":"Bool(O)","info":"Don't attempt to read the path from Vault if true; drift won't be detected"},{"word":"ignore_absent_fields","kind":"Bool(O)","info":"When reading, disregard fields not present in data_json"},{"word":"path","kind":"String(R)","info":"Full path where to the endpoint that will be written"},{"word":"write_fields","kind":"List(O)","info":"Top-level fields returned by write to persist in state"}],"attributes":[{"word":"data_json","kind":"String","info":"JSON-encoded data to write."},{"word":"disable_delete","kind":"Bool","info":"Don't attempt to delete the path from Vault if true"},{"word":"disable_read","kind":"Bool","info":"Don't attempt to read the path from Vault if true; drift won't be detected"},{"word":"ignore_absent_fields","kind":"Bool","info":"When reading, disregard fields not present in data_json"},{"word":"path","kind":"String","info":"Full path where to the endpoint that will be written"},{"word":"write_data","kind":"Map","info":"Map of strings returned by write operation"},{"word":"write_data_json","kind":"String","info":"JSON data returned by write operation"},{"word":"write_fields","kind":"List","info":"Top-level fields returned by write to persist in state"},{"word":"id","kind":"String"}]},"generic_secret":{"arguments":[{"word":"allow_read","kind":"Bool(O)","info":"Attempt to read the token from Vault if true; if false, drift won't be detected."},{"word":"data_json","kind":"String(R)","info":"JSON-encoded secret data to write."},{"word":"disable_read","kind":"Bool(O)","info":"Don't attempt to read the token from Vault if true; drift won't be detected."},{"word":"path","kind":"String(R)","info":"Full path where the generic secret will be written."}],"attributes":[{"word":"allow_read","kind":"Bool","info":"Attempt to read the token from Vault if true; if false, drift won't be detected."},{"word":"data","kind":"Map","info":"Map of strings read from Vault."},{"word":"data_json","kind":"String","info":"JSON-encoded secret data to write."},{"word":"disable_read","kind":"Bool","info":"Don't attempt to read the token from Vault if true; drift won't be detected."},{"word":"path","kind":"String","info":"Full path where the generic secret will be written."},{"word":"id","kind":"String"}]},"github_auth_backend":{"arguments":[{"word":"base_url","kind":"String(O)","info":"The API endpoint to use. Useful if you are running GitHub Enterprise or an API-compatible authentication server."},{"word":"description","kind":"String(O)","info":"Specifies the description of the mount. This overrides the current stored value, if any."},{"word":"max_ttl","kind":"String(O)","info":"Maximum duration after which authentication will be expired, in seconds."},{"word":"organization","kind":"String(R)","info":"The organization users must be part of."},{"word":"path","kind":"String(O)","info":"Path where the auth backend is mounted"},{"word":"ttl","kind":"String(O)","info":"Duration after which authentication will be expired, in seconds."},{"word":"tune","kind":"Set(O)(B)","subblock":[{"word":"audit_non_hmac_request_keys","kind":"List(O)","info":"Specifies the list of keys that will not be HMAC'd by audit devices in the request data object."},{"word":"audit_non_hmac_response_keys","kind":"List(O)","info":"Specifies the list of keys that will not be HMAC'd by audit devices in the response data object."},{"word":"default_lease_ttl","kind":"String(O)","info":"Specifies the default time-to-live duration. This overrides the global default. A value of 0 is equivalent to the system default TTL"},{"word":"listing_visibility","kind":"String(O)","info":"Specifies whether to show this mount in the UI-specific listing endpoint. Valid values are \"unauth\" or \"hidden\". If not set, behaves like \"hidden\"."},{"word":"max_lease_ttl","kind":"String(O)","info":"Specifies the maximum time-to-live duration. This overrides the global default. A value of 0 are equivalent and set to the system max TTL."},{"word":"passthrough_request_headers","kind":"List(O)","info":"List of headers to whitelist and pass from the request to the backend."}]}],"attributes":[{"word":"accessor","kind":"String","info":"The mount accessor related to the auth mount."},{"word":"base_url","kind":"String","info":"The API endpoint to use. Useful if you are running GitHub Enterprise or an API-compatible authentication server."},{"word":"description","kind":"String","info":"Specifies the description of the mount. This overrides the current stored value, if any."},{"word":"max_ttl","kind":"String","info":"Maximum duration after which authentication will be expired, in seconds."},{"word":"organization","kind":"String","info":"The organization users must be part of."},{"word":"path","kind":"String","info":"Path where the auth backend is mounted"},{"word":"ttl","kind":"String","info":"Duration after which authentication will be expired, in seconds."},{"word":"tune","kind":"Set(B)","subblock":[{"word":"audit_non_hmac_request_keys","kind":"List","info":"Specifies the list of keys that will not be HMAC'd by audit devices in the request data object."},{"word":"audit_non_hmac_response_keys","kind":"List","info":"Specifies the list of keys that will not be HMAC'd by audit devices in the response data object."},{"word":"default_lease_ttl","kind":"String","info":"Specifies the default time-to-live duration. This overrides the global default. A value of 0 is equivalent to the system default TTL"},{"word":"listing_visibility","kind":"String","info":"Specifies whether to show this mount in the UI-specific listing endpoint. Valid values are \"unauth\" or \"hidden\". If not set, behaves like \"hidden\"."},{"word":"max_lease_ttl","kind":"String","info":"Specifies the maximum time-to-live duration. This overrides the global default. A value of 0 are equivalent and set to the system max TTL."},{"word":"passthrough_request_headers","kind":"List","info":"List of headers to whitelist and pass from the request to the backend."},{"word":"id","kind":"String"}]},{"word":"id","kind":"String"}]},"github_team":{"arguments":[{"word":"backend","kind":"String(O)","info":"Auth backend to which team mapping will be congigured."},{"word":"policies","kind":"List(O)","info":"Policies to be assigned to this team."},{"word":"team","kind":"String(R)","info":"GitHub team name in \"slugified\" format."}],"attributes":[{"word":"backend","kind":"String","info":"Auth backend to which team mapping will be congigured."},{"word":"policies","kind":"List","info":"Policies to be assigned to this team."},{"word":"team","kind":"String","info":"GitHub team name in \"slugified\" format."},{"word":"id","kind":"String"}]},"github_user":{"arguments":[{"word":"backend","kind":"String(O)","info":"Auth backend to which user mapping will be congigured."},{"word":"policies","kind":"List(O)","info":"Policies to be assigned to this user."},{"word":"user","kind":"String(R)","info":"GitHub user name."}],"attributes":[{"word":"backend","kind":"String","info":"Auth backend to which user mapping will be congigured."},{"word":"policies","kind":"List","info":"Policies to be assigned to this user."},{"word":"user","kind":"String","info":"GitHub user name."},{"word":"id","kind":"String"}]},"identity_entity":{"arguments":[{"word":"disabled","kind":"Bool(O)","info":"Whether the entity is disabled. Disabled entities' associated tokens cannot be used, but are not revoked."},{"word":"metadata","kind":"Map(O)","info":"Metadata to be associated with the entity."},{"word":"name","kind":"String(O)","info":"Name of the entity."},{"word":"policies","kind":"Set(O)","info":"Policies to be tied to the entity."}],"attributes":[{"word":"disabled","kind":"Bool","info":"Whether the entity is disabled. Disabled entities' associated tokens cannot be used, but are not revoked."},{"word":"metadata","kind":"Map","info":"Metadata to be associated with the entity."},{"word":"name","kind":"String","info":"Name of the entity."},{"word":"policies","kind":"Set","info":"Policies to be tied to the entity."},{"word":"id","kind":"String"}]},"identity_entity_alias":{"arguments":[{"word":"canonical_id","kind":"String(R)","info":"ID of the entity to which this is an alias."},{"word":"mount_accessor","kind":"String(R)","info":"Mount accessor to which this alias belongs toMount accessor to which this alias belongs to."},{"word":"name","kind":"String(R)","info":"Name of the entity alias."}],"attributes":[{"word":"canonical_id","kind":"String","info":"ID of the entity to which this is an alias."},{"word":"mount_accessor","kind":"String","info":"Mount accessor to which this alias belongs toMount accessor to which this alias belongs to."},{"word":"name","kind":"String","info":"Name of the entity alias."},{"word":"id","kind":"String"}]},"identity_group":{"arguments":[{"word":"external_policies","kind":"Bool(O)","info":"Manage policies externally through `vault_identity_group_policies`, allows using group ID in assigned policies."},{"word":"member_entity_ids","kind":"Set(O)","info":"Entity IDs to be assigned as group members."},{"word":"member_group_ids","kind":"Set(O)","info":"Group IDs to be assigned as group members."},{"word":"metadata","kind":"Map(O)","info":"Metadata to be associated with the group."},{"word":"name","kind":"String(O)","info":"Name of the group."},{"word":"policies","kind":"Set(O)","info":"Policies to be tied to the group."},{"word":"type","kind":"String(O)","info":"Type of the group, internal or external. Defaults to internal."}],"attributes":[{"word":"external_policies","kind":"Bool","info":"Manage policies externally through `vault_identity_group_policies`, allows using group ID in assigned policies."},{"word":"member_entity_ids","kind":"Set","info":"Entity IDs to be assigned as group members."},{"word":"member_group_ids","kind":"Set","info":"Group IDs to be assigned as group members."},{"word":"metadata","kind":"Map","info":"Metadata to be associated with the group."},{"word":"name","kind":"String","info":"Name of the group."},{"word":"policies","kind":"Set","info":"Policies to be tied to the group."},{"word":"type","kind":"String","info":"Type of the group, internal or external. Defaults to internal."},{"word":"id","kind":"String"}]},"identity_group_alias":{"arguments":[{"word":"canonical_id","kind":"String(R)","info":"ID of the group to which this is an alias."},{"word":"mount_accessor","kind":"String(R)","info":"Mount accessor to which this alias belongs to."},{"word":"name","kind":"String(R)","info":"Name of the group alias."}],"attributes":[{"word":"canonical_id","kind":"String","info":"ID of the group to which this is an alias."},{"word":"mount_accessor","kind":"String","info":"Mount accessor to which this alias belongs to."},{"word":"name","kind":"String","info":"Name of the group alias."},{"word":"id","kind":"String"}]},"identity_group_policies":{"arguments":[{"word":"exclusive","kind":"Bool(O)","info":"Should the resource manage policies exclusively? Beware of race conditions when disabling exclusive management"},{"word":"group_id","kind":"String(R)","info":"ID of the group."},{"word":"policies","kind":"Set(R)","info":"Policies to be tied to the group."}],"attributes":[{"word":"exclusive","kind":"Bool","info":"Should the resource manage policies exclusively? Beware of race conditions when disabling exclusive management"},{"word":"group_id","kind":"String","info":"ID of the group."},{"word":"group_name","kind":"String","info":"Name of the group."},{"word":"policies","kind":"Set","info":"Policies to be tied to the group."},{"word":"id","kind":"String"}]},"jwt_auth_backend":{"arguments":[{"word":"bound_issuer","kind":"String(O)","info":"The value against which to match the iss claim in a JWT"},{"word":"default_role","kind":"String(O)","info":"The default role to use if none is provided during login"},{"word":"description","kind":"String(O)","info":"The description of the auth backend"},{"word":"jwt_supported_algs","kind":"List(O)","info":"A list of supported signing algorithms. Defaults to [RS256]"},{"word":"jwt_validation_pubkeys","kind":"List(O)","info":"A list of PEM-encoded public keys to use to authenticate signatures locally"},{"word":"oidc_client_id","kind":"String(O)","info":"Client ID used for OIDC"},{"word":"oidc_client_secret","kind":"String(O)","info":"Client Secret used for OIDC"},{"word":"oidc_discovery_ca_pem","kind":"String(O)","info":"The CA certificate or chain of certificates, in PEM format, to use to validate connections to the OIDC Discovery URL. If not set, system certificates are used"},{"word":"oidc_discovery_url","kind":"String(O)","info":"The OIDC Discovery URL, without any .well-known component (base path)"},{"word":"path","kind":"String(O)","info":"path to mount the backend"},{"word":"tune","kind":"Set(O)(B)","subblock":[{"word":"audit_non_hmac_request_keys","kind":"List(O)","info":"Specifies the list of keys that will not be HMAC'd by audit devices in the request data object."},{"word":"audit_non_hmac_response_keys","kind":"List(O)","info":"Specifies the list of keys that will not be HMAC'd by audit devices in the response data object."},{"word":"default_lease_ttl","kind":"String(O)","info":"Specifies the default time-to-live duration. This overrides the global default. A value of 0 is equivalent to the system default TTL"},{"word":"listing_visibility","kind":"String(O)","info":"Specifies whether to show this mount in the UI-specific listing endpoint. Valid values are \"unauth\" or \"hidden\". If not set, behaves like \"hidden\"."},{"word":"max_lease_ttl","kind":"String(O)","info":"Specifies the maximum time-to-live duration. This overrides the global default. A value of 0 are equivalent and set to the system max TTL."},{"word":"passthrough_request_headers","kind":"List(O)","info":"List of headers to whitelist and pass from the request to the backend."}]},{"word":"type","kind":"String(O)","info":"Type of backend. Can be either 'jwt' or 'oidc'"}],"attributes":[{"word":"accessor","kind":"String","info":"The accessor of the JWT auth backend"},{"word":"bound_issuer","kind":"String","info":"The value against which to match the iss claim in a JWT"},{"word":"default_role","kind":"String","info":"The default role to use if none is provided during login"},{"word":"description","kind":"String","info":"The description of the auth backend"},{"word":"jwt_supported_algs","kind":"List","info":"A list of supported signing algorithms. Defaults to [RS256]"},{"word":"jwt_validation_pubkeys","kind":"List","info":"A list of PEM-encoded public keys to use to authenticate signatures locally"},{"word":"oidc_client_id","kind":"String","info":"Client ID used for OIDC"},{"word":"oidc_client_secret","kind":"String","info":"Client Secret used for OIDC"},{"word":"oidc_discovery_ca_pem","kind":"String","info":"The CA certificate or chain of certificates, in PEM format, to use to validate connections to the OIDC Discovery URL. If not set, system certificates are used"},{"word":"oidc_discovery_url","kind":"String","info":"The OIDC Discovery URL, without any .well-known component (base path)"},{"word":"path","kind":"String","info":"path to mount the backend"},{"word":"tune","kind":"Set(B)","subblock":[{"word":"audit_non_hmac_request_keys","kind":"List","info":"Specifies the list of keys that will not be HMAC'd by audit devices in the request data object."},{"word":"audit_non_hmac_response_keys","kind":"List","info":"Specifies the list of keys that will not be HMAC'd by audit devices in the response data object."},{"word":"default_lease_ttl","kind":"String","info":"Specifies the default time-to-live duration. This overrides the global default. A value of 0 is equivalent to the system default TTL"},{"word":"listing_visibility","kind":"String","info":"Specifies whether to show this mount in the UI-specific listing endpoint. Valid values are \"unauth\" or \"hidden\". If not set, behaves like \"hidden\"."},{"word":"max_lease_ttl","kind":"String","info":"Specifies the maximum time-to-live duration. This overrides the global default. A value of 0 are equivalent and set to the system max TTL."},{"word":"passthrough_request_headers","kind":"List","info":"List of headers to whitelist and pass from the request to the backend."},{"word":"id","kind":"String"}]},{"word":"type","kind":"String","info":"Type of backend. Can be either 'jwt' or 'oidc'"},{"word":"id","kind":"String"}]},"jwt_auth_backend_role":{"arguments":[{"word":"allowed_redirect_uris","kind":"Set(O)","info":"The list of allowed values for redirect_uri during OIDC logins."},{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"bound_audiences","kind":"Set(R)","info":"List of aud claims to match against. Any match is sufficient."},{"word":"bound_cidrs","kind":"Set(O)","info":"List of CIDRs valid as the source address for login requests. This value is also encoded into any resulting token."},{"word":"bound_claims","kind":"Map(O)","info":"Map of claims/values to match against. The expected value may be a single string or a list of strings."},{"word":"bound_subject","kind":"String(O)","info":"If set, requires that the sub claim matches this value."},{"word":"claim_mappings","kind":"Map(O)","info":"Map of claims (keys) to be copied to specified metadata fields (values)."},{"word":"groups_claim","kind":"String(O)","info":"The claim to use to uniquely identify the set of groups to which the user belongs; this will be used as the names for the Identity group aliases created due to a successful login. The claim value must be a list of strings."},{"word":"groups_claim_delimiter_pattern","kind":"String(O)","info":"A pattern of delimiters used to allow the groups_claim to live outside of the top-level JWT structure. For instance, a groups_claim of meta/user.name/groups with this field set to // will expect nested structures named meta, user.name, and groups. If this field was set to /./ the groups information would expect to be via nested structures of meta, user, name, and groups."},{"word":"max_ttl","kind":"Int(O)","info":"Number of seconds after which issued tokens can no longer be renewed."},{"word":"num_uses","kind":"Int(O)","info":"Number of times issued tokens can be used. Setting this to 0 or leaving it unset means unlimited uses."},{"word":"oidc_scopes","kind":"Set(O)","info":"List of OIDC scopes to be used with an OIDC role. The standard scope \"openid\" is automatically included and need not be specified."},{"word":"period","kind":"Int(O)","info":"Number of seconds to set the TTL to for issued tokens upon renewal. Makes the token a periodic token, which will never expire as long as it is renewed before the TTL each period."},{"word":"policies","kind":"Set(O)","info":"Policies to be set on tokens issued using this role."},{"word":"role_name","kind":"String(R)","info":"Name of the role."},{"word":"role_type","kind":"String(O)","info":"Type of role, either \"oidc\" (default) or \"jwt\""},{"word":"ttl","kind":"Int(O)","info":"Default number of seconds to set as the TTL for issued tokens and at renewal time."},{"word":"user_claim","kind":"String(R)","info":"The claim to use to uniquely identify the user; this will be used as the name for the Identity entity alias created due to a successful login."}],"attributes":[{"word":"allowed_redirect_uris","kind":"Set","info":"The list of allowed values for redirect_uri during OIDC logins."},{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"bound_audiences","kind":"Set","info":"List of aud claims to match against. Any match is sufficient."},{"word":"bound_cidrs","kind":"Set","info":"List of CIDRs valid as the source address for login requests. This value is also encoded into any resulting token."},{"word":"bound_claims","kind":"Map","info":"Map of claims/values to match against. The expected value may be a single string or a list of strings."},{"word":"bound_subject","kind":"String","info":"If set, requires that the sub claim matches this value."},{"word":"claim_mappings","kind":"Map","info":"Map of claims (keys) to be copied to specified metadata fields (values)."},{"word":"groups_claim","kind":"String","info":"The claim to use to uniquely identify the set of groups to which the user belongs; this will be used as the names for the Identity group aliases created due to a successful login. The claim value must be a list of strings."},{"word":"groups_claim_delimiter_pattern","kind":"String","info":"A pattern of delimiters used to allow the groups_claim to live outside of the top-level JWT structure. For instance, a groups_claim of meta/user.name/groups with this field set to // will expect nested structures named meta, user.name, and groups. If this field was set to /./ the groups information would expect to be via nested structures of meta, user, name, and groups."},{"word":"max_ttl","kind":"Int","info":"Number of seconds after which issued tokens can no longer be renewed."},{"word":"num_uses","kind":"Int","info":"Number of times issued tokens can be used. Setting this to 0 or leaving it unset means unlimited uses."},{"word":"oidc_scopes","kind":"Set","info":"List of OIDC scopes to be used with an OIDC role. The standard scope \"openid\" is automatically included and need not be specified."},{"word":"period","kind":"Int","info":"Number of seconds to set the TTL to for issued tokens upon renewal. Makes the token a periodic token, which will never expire as long as it is renewed before the TTL each period."},{"word":"policies","kind":"Set","info":"Policies to be set on tokens issued using this role."},{"word":"role_name","kind":"String","info":"Name of the role."},{"word":"role_type","kind":"String","info":"Type of role, either \"oidc\" (default) or \"jwt\""},{"word":"ttl","kind":"Int","info":"Default number of seconds to set as the TTL for issued tokens and at renewal time."},{"word":"user_claim","kind":"String","info":"The claim to use to uniquely identify the user; this will be used as the name for the Identity entity alias created due to a successful login."},{"word":"id","kind":"String"}]},"kubernetes_auth_backend_config":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the kubernetes backend to configure."},{"word":"kubernetes_ca_cert","kind":"String(O)","info":"PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API."},{"word":"kubernetes_host","kind":"String(R)","info":"Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server."},{"word":"pem_keys","kind":"List(O)","info":"Optional list of PEM-formatted public keys or certificates used to verify the signatures of Kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kubernetes exposes these keys."},{"word":"token_reviewer_jwt","kind":"String(O)","info":"A service account JWT used to access the TokenReview API to validate other JWTs during login. If not set the JWT used for login will be used to access the API."}],"attributes":[{"word":"backend","kind":"String","info":"Unique name of the kubernetes backend to configure."},{"word":"kubernetes_ca_cert","kind":"String","info":"PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API."},{"word":"kubernetes_host","kind":"String","info":"Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server."},{"word":"pem_keys","kind":"List","info":"Optional list of PEM-formatted public keys or certificates used to verify the signatures of Kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kubernetes exposes these keys."},{"word":"token_reviewer_jwt","kind":"String","info":"A service account JWT used to access the TokenReview API to validate other JWTs during login. If not set the JWT used for login will be used to access the API."},{"word":"id","kind":"String"}]},"kubernetes_auth_backend_role":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the kubernetes backend to configure."},{"word":"bound_cidrs","kind":"Set(O)","info":"List of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation."},{"word":"bound_service_account_names","kind":"Set(R)","info":"List of service account names able to access this role. If set to `[\"*\"]` all names are allowed, both this and bound_service_account_namespaces can not be \"*\"."},{"word":"bound_service_account_namespaces","kind":"Set(R)","info":"List of namespaces allowed to access this role. If set to `[\"*\"]` all namespaces are allowed, both this and bound_service_account_names can not be set to \"*\"."},{"word":"max_ttl","kind":"Int(O)","info":"The maximum allowed lifetime of tokens issued in seconds using this role."},{"word":"num_uses","kind":"Int(O)","info":"Number of times issued tokens can be used. Setting this to 0 or leaving it unset means unlimited uses."},{"word":"period","kind":"Int(O)","info":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter."},{"word":"policies","kind":"Set(O)","info":"Policies to be set on tokens issued using this role."},{"word":"role_name","kind":"String(R)","info":"Name of the role."},{"word":"ttl","kind":"Int(O)","info":"The TTL period of tokens issued using this role in seconds."}],"attributes":[{"word":"backend","kind":"String","info":"Unique name of the kubernetes backend to configure."},{"word":"bound_cidrs","kind":"Set","info":"List of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation."},{"word":"bound_service_account_names","kind":"Set","info":"List of service account names able to access this role. If set to `[\"*\"]` all names are allowed, both this and bound_service_account_namespaces can not be \"*\"."},{"word":"bound_service_account_namespaces","kind":"Set","info":"List of namespaces allowed to access this role. If set to `[\"*\"]` all namespaces are allowed, both this and bound_service_account_names can not be set to \"*\"."},{"word":"max_ttl","kind":"Int","info":"The maximum allowed lifetime of tokens issued in seconds using this role."},{"word":"num_uses","kind":"Int","info":"Number of times issued tokens can be used. Setting this to 0 or leaving it unset means unlimited uses."},{"word":"period","kind":"Int","info":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter."},{"word":"policies","kind":"Set","info":"Policies to be set on tokens issued using this role."},{"word":"role_name","kind":"String","info":"Name of the role."},{"word":"ttl","kind":"Int","info":"The TTL period of tokens issued using this role in seconds."},{"word":"id","kind":"String"}]},"ldap_auth_backend":{"arguments":[{"word":"binddn","kind":"String(O)"},{"word":"bindpass","kind":"String(O)"},{"word":"certificate","kind":"String(O)"},{"word":"deny_null_bind","kind":"Bool(O)"},{"word":"description","kind":"String(O)"},{"word":"discoverdn","kind":"Bool(O)"},{"word":"groupattr","kind":"String(O)"},{"word":"groupdn","kind":"String(O)"},{"word":"groupfilter","kind":"String(O)"},{"word":"insecure_tls","kind":"Bool(O)"},{"word":"path","kind":"String(O)"},{"word":"starttls","kind":"Bool(O)"},{"word":"tls_max_version","kind":"String(O)"},{"word":"tls_min_version","kind":"String(O)"},{"word":"upndomain","kind":"String(O)"},{"word":"url","kind":"String(R)"},{"word":"use_token_groups","kind":"Bool(O)"},{"word":"userattr","kind":"String(O)"},{"word":"userdn","kind":"String(O)"}],"attributes":[{"word":"accessor","kind":"String","info":"The accessor of the LDAP auth backend"},{"word":"binddn","kind":"String"},{"word":"bindpass","kind":"String"},{"word":"certificate","kind":"String"},{"word":"deny_null_bind","kind":"Bool"},{"word":"description","kind":"String"},{"word":"discoverdn","kind":"Bool"},{"word":"groupattr","kind":"String"},{"word":"groupdn","kind":"String"},{"word":"groupfilter","kind":"String"},{"word":"insecure_tls","kind":"Bool"},{"word":"path","kind":"String"},{"word":"starttls","kind":"Bool"},{"word":"tls_max_version","kind":"String"},{"word":"tls_min_version","kind":"String"},{"word":"upndomain","kind":"String"},{"word":"url","kind":"String"},{"word":"use_token_groups","kind":"Bool"},{"word":"userattr","kind":"String"},{"word":"userdn","kind":"String"},{"word":"id","kind":"String"}]},"ldap_auth_backend_group":{"arguments":[{"word":"backend","kind":"String(O)"},{"word":"groupname","kind":"String(R)"},{"word":"policies","kind":"Set(O)"}],"attributes":[{"word":"backend","kind":"String"},{"word":"groupname","kind":"String"},{"word":"policies","kind":"Set"},{"word":"id","kind":"String"}]},"ldap_auth_backend_user":{"arguments":[{"word":"backend","kind":"String(O)"},{"word":"groups","kind":"Set(O)"},{"word":"policies","kind":"Set(O)"},{"word":"username","kind":"String(R)"}],"attributes":[{"word":"backend","kind":"String"},{"word":"groups","kind":"Set"},{"word":"policies","kind":"Set"},{"word":"username","kind":"String"},{"word":"id","kind":"String"}]},"mount":{"arguments":[{"word":"default_lease_ttl_seconds","kind":"Int(O)","info":"Default lease duration for tokens and secrets in seconds"},{"word":"description","kind":"String(O)","info":"Human-friendly description of the mount"},{"word":"max_lease_ttl_seconds","kind":"Int(O)","info":"Maximum possible lease duration for tokens and secrets in seconds"},{"word":"options","kind":"Map(O)","info":"Specifies mount type specific options that are passed to the backend"},{"word":"path","kind":"String(R)","info":"Where the secret backend will be mounted"},{"word":"type","kind":"String(R)","info":"Type of the backend, such as 'aws'"}],"attributes":[{"word":"accessor","kind":"String","info":"Accessor of the mount"},{"word":"default_lease_ttl_seconds","kind":"Int","info":"Default lease duration for tokens and secrets in seconds"},{"word":"description","kind":"String","info":"Human-friendly description of the mount"},{"word":"max_lease_ttl_seconds","kind":"Int","info":"Maximum possible lease duration for tokens and secrets in seconds"},{"word":"options","kind":"Map","info":"Specifies mount type specific options that are passed to the backend"},{"word":"path","kind":"String","info":"Where the secret backend will be mounted"},{"word":"type","kind":"String","info":"Type of the backend, such as 'aws'"},{"word":"id","kind":"String"}]},"namespace":{"arguments":[{"word":"path","kind":"String(R)","info":"Path of the namespace."}],"attributes":[{"word":"path","kind":"String","info":"Path of the namespace."},{"word":"id","kind":"String"}]},"okta_auth_backend":{"arguments":[{"word":"base_url","kind":"String(O)","info":"The Okta url. Examples: oktapreview.com, okta.com (default)"},{"word":"bypass_okta_mfa","kind":"Bool(O)","info":"When true, requests by Okta for a MFA check will be bypassed. This also disallows certain status checks on the account, such as whether the password is expired."},{"word":"description","kind":"String(O)","info":"The description of the auth backend"},{"word":"group","kind":"Set(O)(B)","subblock":[{"word":"group_name","kind":"String(R)","info":"Name of the Okta group"},{"word":"policies","kind":"Set(R)","info":"Policies to associate with this group"}]},{"word":"max_ttl","kind":"String(O)","info":"Maximum duration after which authentication will be expired"},{"word":"organization","kind":"String(R)","info":"The Okta organization. This will be the first part of the url https://XXX.okta.com."},{"word":"path","kind":"String(O)","info":"path to mount the backend"},{"word":"token","kind":"String(O)","info":"The Okta API token. This is required to query Okta for user group membership. If this is not supplied only locally configured groups will be enabled."},{"word":"ttl","kind":"String(O)","info":"Duration after which authentication will be expired"},{"word":"user","kind":"Set(O)(B)","subblock":[{"word":"groups","kind":"Set(R)","info":"Groups within the Okta auth backend to associate with this user"},{"word":"policies","kind":"Set(O)","info":"Policies to associate with this user"},{"word":"username","kind":"String(R)","info":"Name of the user within Okta"}]}],"attributes":[{"word":"base_url","kind":"String","info":"The Okta url. Examples: oktapreview.com, okta.com (default)"},{"word":"bypass_okta_mfa","kind":"Bool","info":"When true, requests by Okta for a MFA check will be bypassed. This also disallows certain status checks on the account, such as whether the password is expired."},{"word":"description","kind":"String","info":"The description of the auth backend"},{"word":"group","kind":"Set(B)","subblock":[{"word":"group_name","kind":"String","info":"Name of the Okta group"},{"word":"policies","kind":"Set","info":"Policies to associate with this group"},{"word":"id","kind":"String"}]},{"word":"max_ttl","kind":"String","info":"Maximum duration after which authentication will be expired"},{"word":"organization","kind":"String","info":"The Okta organization. This will be the first part of the url https://XXX.okta.com."},{"word":"path","kind":"String","info":"path to mount the backend"},{"word":"token","kind":"String","info":"The Okta API token. This is required to query Okta for user group membership. If this is not supplied only locally configured groups will be enabled."},{"word":"ttl","kind":"String","info":"Duration after which authentication will be expired"},{"word":"user","kind":"Set(B)","subblock":[{"word":"groups","kind":"Set","info":"Groups within the Okta auth backend to associate with this user"},{"word":"policies","kind":"Set","info":"Policies to associate with this user"},{"word":"username","kind":"String","info":"Name of the user within Okta"},{"word":"id","kind":"String"}]},{"word":"id","kind":"String"}]},"okta_auth_backend_group":{"arguments":[{"word":"group_name","kind":"String(R)","info":"Name of the Okta group"},{"word":"path","kind":"String(R)","info":"Path to the Okta auth backend"},{"word":"policies","kind":"Set(O)","info":"Policies to associate with this group"}],"attributes":[{"word":"group_name","kind":"String","info":"Name of the Okta group"},{"word":"path","kind":"String","info":"Path to the Okta auth backend"},{"word":"policies","kind":"Set","info":"Policies to associate with this group"},{"word":"id","kind":"String"}]},"okta_auth_backend_user":{"arguments":[{"word":"groups","kind":"Set(O)","info":"Groups within the Okta auth backend to associate with this user"},{"word":"path","kind":"String(R)","info":"Path to the Okta auth backend"},{"word":"policies","kind":"Set(O)","info":"Policies to associate with this user"},{"word":"username","kind":"String(R)","info":"Name of the user within Okta"}],"attributes":[{"word":"groups","kind":"Set","info":"Groups within the Okta auth backend to associate with this user"},{"word":"path","kind":"String","info":"Path to the Okta auth backend"},{"word":"policies","kind":"Set","info":"Policies to associate with this user"},{"word":"username","kind":"String","info":"Name of the user within Okta"},{"word":"id","kind":"String"}]},"pki_secret_backend":{"arguments":[{"word":"default_lease_ttl_seconds","kind":"Int(O)","info":"Default lease duration for tokens and secrets in seconds"},{"word":"description","kind":"String(O)","info":"Human-friendly description of the mount for the backend."},{"word":"max_lease_ttl_seconds","kind":"Int(O)","info":"Maximum possible lease duration for tokens and secrets in seconds"},{"word":"path","kind":"String(R)","info":"Path to mount the backend at."}],"attributes":[{"word":"default_lease_ttl_seconds","kind":"Int","info":"Default lease duration for tokens and secrets in seconds"},{"word":"description","kind":"String","info":"Human-friendly description of the mount for the backend."},{"word":"max_lease_ttl_seconds","kind":"Int","info":"Maximum possible lease duration for tokens and secrets in seconds"},{"word":"path","kind":"String","info":"Path to mount the backend at."},{"word":"id","kind":"String"}]},"pki_secret_backend_cert":{"arguments":[{"word":"alt_names","kind":"List(O)","info":"List of alternative names."},{"word":"auto_renew","kind":"Bool(O)","info":"If enabled, a new certificate will be generated if the expiration is within min_seconds_remaining"},{"word":"backend","kind":"String(R)","info":"The PKI secret backend the resource belongs to."},{"word":"common_name","kind":"String(R)","info":"CN of the certificate to create."},{"word":"exclude_cn_from_sans","kind":"Bool(O)","info":"Flag to exclude CN from SANs."},{"word":"format","kind":"String(O)","info":"The format of data."},{"word":"ip_sans","kind":"List(O)","info":"List of alternative IPs."},{"word":"min_seconds_remaining","kind":"Int(O)","info":"Generate a new certificate when the expiration is within this number of seconds"},{"word":"name","kind":"String(R)","info":"Name of the role to create the certificate against."},{"word":"other_sans","kind":"List(O)","info":"List of other SANs."},{"word":"private_key_format","kind":"String(O)","info":"The private key format."},{"word":"ttl","kind":"String(O)","info":"Time to leave."}],"attributes":[{"word":"alt_names","kind":"List","info":"List of alternative names."},{"word":"auto_renew","kind":"Bool","info":"If enabled, a new certificate will be generated if the expiration is within min_seconds_remaining"},{"word":"backend","kind":"String","info":"The PKI secret backend the resource belongs to."},{"word":"ca_chain","kind":"String","info":"The CA chain."},{"word":"certificate","kind":"String","info":"The certicate."},{"word":"common_name","kind":"String","info":"CN of the certificate to create."},{"word":"exclude_cn_from_sans","kind":"Bool","info":"Flag to exclude CN from SANs."},{"word":"expiration","kind":"Int","info":"The certificate expiration."},{"word":"format","kind":"String","info":"The format of data."},{"word":"ip_sans","kind":"List","info":"List of alternative IPs."},{"word":"issuing_ca","kind":"String","info":"The issuing CA."},{"word":"min_seconds_remaining","kind":"Int","info":"Generate a new certificate when the expiration is within this number of seconds"},{"word":"name","kind":"String","info":"Name of the role to create the certificate against."},{"word":"other_sans","kind":"List","info":"List of other SANs."},{"word":"private_key","kind":"String","info":"The private key."},{"word":"private_key_format","kind":"String","info":"The private key format."},{"word":"private_key_type","kind":"String","info":"The private key type."},{"word":"serial_number","kind":"String","info":"The serial number."},{"word":"ttl","kind":"String","info":"Time to leave."},{"word":"id","kind":"String"}]},"pki_secret_backend_config_ca":{"arguments":[{"word":"backend","kind":"String(R)","info":"The PKI secret backend the resource belongs to."},{"word":"pem_bundle","kind":"String(R)","info":"The key and certificate PEM bundle."}],"attributes":[{"word":"backend","kind":"String","info":"The PKI secret backend the resource belongs to."},{"word":"pem_bundle","kind":"String","info":"The key and certificate PEM bundle."},{"word":"id","kind":"String"}]},"pki_secret_backend_config_urls":{"arguments":[{"word":"backend","kind":"String(R)","info":"The path of the PKI secret backend the resource belongs to."},{"word":"crl_distribution_points","kind":"String(O)","info":"Specifies the URL values for the CRL Distribution Points field. This can be a comma-separated string list."},{"word":"issuing_certificates","kind":"String(O)","info":"Specifies the URL values for the Issuing Certificate field. This can be a comma-separated string list."},{"word":"ocsp_servers","kind":"String(O)","info":"Specifies the URL values for the OCSP Servers field. This can be a comma-separated string list."}],"attributes":[{"word":"backend","kind":"String","info":"The path of the PKI secret backend the resource belongs to."},{"word":"crl_distribution_points","kind":"String","info":"Specifies the URL values for the CRL Distribution Points field. This can be a comma-separated string list."},{"word":"issuing_certificates","kind":"String","info":"Specifies the URL values for the Issuing Certificate field. This can be a comma-separated string list."},{"word":"ocsp_servers","kind":"String","info":"Specifies the URL values for the OCSP Servers field. This can be a comma-separated string list."},{"word":"id","kind":"String"}]},"pki_secret_backend_intermediate_cert_request":{"arguments":[{"word":"alt_names","kind":"List(O)","info":"List of alternative names."},{"word":"backend","kind":"String(R)","info":"The PKI secret backend the resource belongs to."},{"word":"common_name","kind":"String(R)","info":"CN of intermediate to create."},{"word":"country","kind":"String(O)","info":"The country."},{"word":"exclude_cn_from_sans","kind":"Bool(O)","info":"Flag to exclude CN from SANs."},{"word":"format","kind":"String(O)","info":"The format of data."},{"word":"ip_sans","kind":"List(O)","info":"List of alternative IPs."},{"word":"key_bits","kind":"Int(O)","info":"The number of bits to use."},{"word":"key_type","kind":"String(O)","info":"The desired key type."},{"word":"locality","kind":"String(O)","info":"The locality."},{"word":"organization","kind":"String(O)","info":"The organization."},{"word":"other_sans","kind":"List(O)","info":"List of other SANs."},{"word":"ou","kind":"String(O)","info":"The organization unit."},{"word":"postal_code","kind":"String(O)","info":"The postal code."},{"word":"private_key_format","kind":"String(O)","info":"The private key format."},{"word":"province","kind":"String(O)","info":"The province."},{"word":"street_address","kind":"String(O)","info":"The street address."},{"word":"type","kind":"String(R)","info":"Type of intermediate to create. Must be either \"exported\" or \"internal\"."},{"word":"uri_sans","kind":"List(O)","info":"List of alternative URIs."}],"attributes":[{"word":"alt_names","kind":"List","info":"List of alternative names."},{"word":"backend","kind":"String","info":"The PKI secret backend the resource belongs to."},{"word":"common_name","kind":"String","info":"CN of intermediate to create."},{"word":"country","kind":"String","info":"The country."},{"word":"csr","kind":"String","info":"The CSR."},{"word":"exclude_cn_from_sans","kind":"Bool","info":"Flag to exclude CN from SANs."},{"word":"format","kind":"String","info":"The format of data."},{"word":"ip_sans","kind":"List","info":"List of alternative IPs."},{"word":"key_bits","kind":"Int","info":"The number of bits to use."},{"word":"key_type","kind":"String","info":"The desired key type."},{"word":"locality","kind":"String","info":"The locality."},{"word":"organization","kind":"String","info":"The organization."},{"word":"other_sans","kind":"List","info":"List of other SANs."},{"word":"ou","kind":"String","info":"The organization unit."},{"word":"postal_code","kind":"String","info":"The postal code."},{"word":"private_key","kind":"String","info":"The private key."},{"word":"private_key_format","kind":"String","info":"The private key format."},{"word":"private_key_type","kind":"String","info":"The private key type."},{"word":"province","kind":"String","info":"The province."},{"word":"street_address","kind":"String","info":"The street address."},{"word":"type","kind":"String","info":"Type of intermediate to create. Must be either \"exported\" or \"internal\"."},{"word":"uri_sans","kind":"List","info":"List of alternative URIs."},{"word":"id","kind":"String"}]},"pki_secret_backend_intermediate_set_signed":{"arguments":[{"word":"backend","kind":"String(R)","info":"The PKI secret backend the resource belongs to."},{"word":"certificate","kind":"String(R)","info":"The certificate."}],"attributes":[{"word":"backend","kind":"String","info":"The PKI secret backend the resource belongs to."},{"word":"certificate","kind":"String","info":"The certificate."},{"word":"id","kind":"String"}]},"pki_secret_backend_role":{"arguments":[{"word":"allow_any_name","kind":"Bool(O)","info":"Flag to allow any name"},{"word":"allow_bare_domains","kind":"Bool(O)","info":"Flag to allow certificates matching the actual domain."},{"word":"allow_glob_domains","kind":"Bool(O)","info":"Flag to allow names containing glob patterns."},{"word":"allow_ip_sans","kind":"Bool(O)","info":"Flag to allow IP SANs"},{"word":"allow_localhost","kind":"Bool(O)","info":"Flag to allow certificates for localhost."},{"word":"allow_subdomains","kind":"Bool(O)","info":"Flag to allow certificates matching subdomains."},{"word":"allowed_domains","kind":"List(O)","info":"The domains of the role."},{"word":"allowed_other_sans","kind":"String(O)","info":"Defines allowed custom SANs"},{"word":"allowed_uri_sans","kind":"String(O)","info":"Defines allowed URI SANs"},{"word":"backend","kind":"String(R)","info":"The path of the PKI secret backend the resource belongs to."},{"word":"basic_constraints_valid_for_non_ca","kind":"Bool(O)","info":"Flag to mark basic constraints valid when issuing non-CA certificates."},{"word":"client_flag","kind":"Bool(O)","info":"Flag to specify certificates for client use."},{"word":"code_signing_flag","kind":"Bool(O)","info":"Flag to specify certificates for code signing use."},{"word":"country","kind":"String(O)","info":"The country of generated certificates."},{"word":"email_protection_flag","kind":"Bool(O)","info":"Flag to specify certificates for email protection use."},{"word":"enforce_hostnames","kind":"Bool(O)","info":"Flag to allow only valid host names"},{"word":"ext_key_usage","kind":"List(O)","info":"Specify the allowed extended key usage constraint on issued certificates."},{"word":"generate_lease","kind":"Bool(O)","info":"Flag to generate leases with certificates."},{"word":"key_bits","kind":"Int(O)","info":"The number of bits of generated keys."},{"word":"key_type","kind":"String(O)","info":"The type of generated keys."},{"word":"key_usage","kind":"List(O)","info":"Specify the allowed key usage constraint on issued certificates."},{"word":"locality","kind":"String(O)","info":"The locality of generated certificates."},{"word":"max_ttl","kind":"String(O)","info":"The maximum TTL."},{"word":"name","kind":"String(R)","info":"Unique name for the role."},{"word":"no_store","kind":"Bool(O)","info":"Flag to not store certificates in the storage backend."},{"word":"organization","kind":"String(O)","info":"The organization of generated certificates."},{"word":"ou","kind":"String(O)","info":"The organization unit of generated certificates."},{"word":"policy_identifiers","kind":"List(O)","info":"Specify the list of allowed policies IODs."},{"word":"postal_code","kind":"String(O)","info":"The postal code of generated certificates."},{"word":"province","kind":"String(O)","info":"The province of generated certificates."},{"word":"require_cn","kind":"Bool(O)","info":"Flag to force CN usage."},{"word":"server_flag","kind":"Bool(O)","info":"Flag to specify certificates for server use."},{"word":"street_address","kind":"String(O)","info":"The street address of generated certificates."},{"word":"ttl","kind":"String(O)","info":"The TTL."},{"word":"use_csr_common_name","kind":"Bool(O)","info":"Flag to use the CN in the CSR."},{"word":"use_csr_sans","kind":"Bool(O)","info":"Flag to use the SANs in the CSR."}],"attributes":[{"word":"allow_any_name","kind":"Bool","info":"Flag to allow any name"},{"word":"allow_bare_domains","kind":"Bool","info":"Flag to allow certificates matching the actual domain."},{"word":"allow_glob_domains","kind":"Bool","info":"Flag to allow names containing glob patterns."},{"word":"allow_ip_sans","kind":"Bool","info":"Flag to allow IP SANs"},{"word":"allow_localhost","kind":"Bool","info":"Flag to allow certificates for localhost."},{"word":"allow_subdomains","kind":"Bool","info":"Flag to allow certificates matching subdomains."},{"word":"allowed_domains","kind":"List","info":"The domains of the role."},{"word":"allowed_other_sans","kind":"String","info":"Defines allowed custom SANs"},{"word":"allowed_uri_sans","kind":"String","info":"Defines allowed URI SANs"},{"word":"backend","kind":"String","info":"The path of the PKI secret backend the resource belongs to."},{"word":"basic_constraints_valid_for_non_ca","kind":"Bool","info":"Flag to mark basic constraints valid when issuing non-CA certificates."},{"word":"client_flag","kind":"Bool","info":"Flag to specify certificates for client use."},{"word":"code_signing_flag","kind":"Bool","info":"Flag to specify certificates for code signing use."},{"word":"country","kind":"String","info":"The country of generated certificates."},{"word":"email_protection_flag","kind":"Bool","info":"Flag to specify certificates for email protection use."},{"word":"enforce_hostnames","kind":"Bool","info":"Flag to allow only valid host names"},{"word":"ext_key_usage","kind":"List","info":"Specify the allowed extended key usage constraint on issued certificates."},{"word":"generate_lease","kind":"Bool","info":"Flag to generate leases with certificates."},{"word":"key_bits","kind":"Int","info":"The number of bits of generated keys."},{"word":"key_type","kind":"String","info":"The type of generated keys."},{"word":"key_usage","kind":"List","info":"Specify the allowed key usage constraint on issued certificates."},{"word":"locality","kind":"String","info":"The locality of generated certificates."},{"word":"max_ttl","kind":"String","info":"The maximum TTL."},{"word":"name","kind":"String","info":"Unique name for the role."},{"word":"no_store","kind":"Bool","info":"Flag to not store certificates in the storage backend."},{"word":"organization","kind":"String","info":"The organization of generated certificates."},{"word":"ou","kind":"String","info":"The organization unit of generated certificates."},{"word":"policy_identifiers","kind":"List","info":"Specify the list of allowed policies IODs."},{"word":"postal_code","kind":"String","info":"The postal code of generated certificates."},{"word":"province","kind":"String","info":"The province of generated certificates."},{"word":"require_cn","kind":"Bool","info":"Flag to force CN usage."},{"word":"server_flag","kind":"Bool","info":"Flag to specify certificates for server use."},{"word":"street_address","kind":"String","info":"The street address of generated certificates."},{"word":"ttl","kind":"String","info":"The TTL."},{"word":"use_csr_common_name","kind":"Bool","info":"Flag to use the CN in the CSR."},{"word":"use_csr_sans","kind":"Bool","info":"Flag to use the SANs in the CSR."},{"word":"id","kind":"String"}]},"pki_secret_backend_root_cert":{"arguments":[{"word":"alt_names","kind":"List(O)","info":"List of alternative names."},{"word":"backend","kind":"String(R)","info":"The PKI secret backend the resource belongs to."},{"word":"common_name","kind":"String(R)","info":"CN of intermediate to create."},{"word":"country","kind":"String(O)","info":"The country."},{"word":"exclude_cn_from_sans","kind":"Bool(O)","info":"Flag to exclude CN from SANs."},{"word":"format","kind":"String(O)","info":"The format of data."},{"word":"ip_sans","kind":"List(O)","info":"List of alternative IPs."},{"word":"key_bits","kind":"Int(O)","info":"The number of bits to use."},{"word":"key_type","kind":"String(O)","info":"The desired key type."},{"word":"locality","kind":"String(O)","info":"The locality."},{"word":"max_path_length","kind":"Int(O)","info":"The maximum path length to encode in the generated certificate."},{"word":"organization","kind":"String(O)","info":"The organization."},{"word":"other_sans","kind":"List(O)","info":"List of other SANs."},{"word":"ou","kind":"String(O)","info":"The organization unit."},{"word":"permitted_dns_domains","kind":"List(O)","info":"List of domains for which certificates are allowed to be issued."},{"word":"postal_code","kind":"String(O)","info":"The postal code."},{"word":"private_key_format","kind":"String(O)","info":"The private key format."},{"word":"province","kind":"String(O)","info":"The province."},{"word":"street_address","kind":"String(O)","info":"The street address."},{"word":"ttl","kind":"String(O)","info":"Time to leave."},{"word":"type","kind":"String(R)","info":"Type of intermediate to create. Must be either \"exported\" or \"internal\"."},{"word":"uri_sans","kind":"List(O)","info":"List of alterative URIs."}],"attributes":[{"word":"alt_names","kind":"List","info":"List of alternative names."},{"word":"backend","kind":"String","info":"The PKI secret backend the resource belongs to."},{"word":"certificate","kind":"String","info":"The certicate."},{"word":"common_name","kind":"String","info":"CN of intermediate to create."},{"word":"country","kind":"String","info":"The country."},{"word":"exclude_cn_from_sans","kind":"Bool","info":"Flag to exclude CN from SANs."},{"word":"format","kind":"String","info":"The format of data."},{"word":"ip_sans","kind":"List","info":"List of alternative IPs."},{"word":"issuing_ca","kind":"String","info":"The issuing CA."},{"word":"key_bits","kind":"Int","info":"The number of bits to use."},{"word":"key_type","kind":"String","info":"The desired key type."},{"word":"locality","kind":"String","info":"The locality."},{"word":"max_path_length","kind":"Int","info":"The maximum path length to encode in the generated certificate."},{"word":"organization","kind":"String","info":"The organization."},{"word":"other_sans","kind":"List","info":"List of other SANs."},{"word":"ou","kind":"String","info":"The organization unit."},{"word":"permitted_dns_domains","kind":"List","info":"List of domains for which certificates are allowed to be issued."},{"word":"postal_code","kind":"String","info":"The postal code."},{"word":"private_key_format","kind":"String","info":"The private key format."},{"word":"province","kind":"String","info":"The province."},{"word":"serial","kind":"String","info":"The serial number."},{"word":"street_address","kind":"String","info":"The street address."},{"word":"ttl","kind":"String","info":"Time to leave."},{"word":"type","kind":"String","info":"Type of intermediate to create. Must be either \"exported\" or \"internal\"."},{"word":"uri_sans","kind":"List","info":"List of alterative URIs."},{"word":"id","kind":"String"}]},"pki_secret_backend_root_sign_intermediate":{"arguments":[{"word":"alt_names","kind":"List(O)","info":"List of alternative names."},{"word":"backend","kind":"String(R)","info":"The PKI secret backend the resource belongs to."},{"word":"common_name","kind":"String(R)","info":"CN of intermediate to create."},{"word":"country","kind":"String(O)","info":"The country."},{"word":"csr","kind":"String(R)","info":"The CSR."},{"word":"exclude_cn_from_sans","kind":"Bool(O)","info":"Flag to exclude CN from SANs."},{"word":"format","kind":"String(O)","info":"The format of data."},{"word":"ip_sans","kind":"List(O)","info":"List of alternative IPs."},{"word":"locality","kind":"String(O)","info":"The locality."},{"word":"max_path_length","kind":"Int(O)","info":"The maximum path length to encode in the generated certificate."},{"word":"organization","kind":"String(O)","info":"The organization."},{"word":"other_sans","kind":"List(O)","info":"List of other SANs."},{"word":"ou","kind":"String(O)","info":"The organization unit."},{"word":"permitted_dns_domains","kind":"List(O)","info":"List of domains for which certificates are allowed to be issued."},{"word":"postal_code","kind":"String(O)","info":"The postal code."},{"word":"province","kind":"String(O)","info":"The province."},{"word":"street_address","kind":"String(O)","info":"The street address."},{"word":"ttl","kind":"String(O)","info":"Time to leave."},{"word":"uri_sans","kind":"List(O)","info":"List of alterative URIs."},{"word":"use_csr_values","kind":"Bool(O)","info":"Preserve CSR values."}],"attributes":[{"word":"alt_names","kind":"List","info":"List of alternative names."},{"word":"backend","kind":"String","info":"The PKI secret backend the resource belongs to."},{"word":"ca_chain","kind":"String","info":"The CA chain."},{"word":"certificate","kind":"String","info":"The certicate."},{"word":"common_name","kind":"String","info":"CN of intermediate to create."},{"word":"country","kind":"String","info":"The country."},{"word":"csr","kind":"String","info":"The CSR."},{"word":"exclude_cn_from_sans","kind":"Bool","info":"Flag to exclude CN from SANs."},{"word":"format","kind":"String","info":"The format of data."},{"word":"ip_sans","kind":"List","info":"List of alternative IPs."},{"word":"issuing_ca","kind":"String","info":"The issuing CA."},{"word":"locality","kind":"String","info":"The locality."},{"word":"max_path_length","kind":"Int","info":"The maximum path length to encode in the generated certificate."},{"word":"organization","kind":"String","info":"The organization."},{"word":"other_sans","kind":"List","info":"List of other SANs."},{"word":"ou","kind":"String","info":"The organization unit."},{"word":"permitted_dns_domains","kind":"List","info":"List of domains for which certificates are allowed to be issued."},{"word":"postal_code","kind":"String","info":"The postal code."},{"word":"province","kind":"String","info":"The province."},{"word":"serial","kind":"String","info":"The serial number."},{"word":"street_address","kind":"String","info":"The street address."},{"word":"ttl","kind":"String","info":"Time to leave."},{"word":"uri_sans","kind":"List","info":"List of alterative URIs."},{"word":"use_csr_values","kind":"Bool","info":"Preserve CSR values."},{"word":"id","kind":"String"}]},"pki_secret_backend_sign":{"arguments":[{"word":"alt_names","kind":"List(O)","info":"List of alternative names."},{"word":"auto_renew","kind":"Bool(O)","info":"If enabled, a new certificate will be generated if the expiration is within min_seconds_remaining"},{"word":"backend","kind":"String(R)","info":"The PKI secret backend the resource belongs to."},{"word":"common_name","kind":"String(R)","info":"CN of intermediate to create."},{"word":"csr","kind":"String(R)","info":"The CSR."},{"word":"exclude_cn_from_sans","kind":"Bool(O)","info":"Flag to exclude CN from SANs."},{"word":"format","kind":"String(O)","info":"The format of data."},{"word":"ip_sans","kind":"List(O)","info":"List of alternative IPs."},{"word":"min_seconds_remaining","kind":"Int(O)","info":"Generate a new certificate when the expiration is within this number of seconds"},{"word":"name","kind":"String(R)","info":"Name of the role to create the certificate against."},{"word":"other_sans","kind":"List(O)","info":"List of other SANs."},{"word":"ttl","kind":"String(O)","info":"Time to leave."},{"word":"uri_sans","kind":"List(O)","info":"List of alterative URIs."}],"attributes":[{"word":"alt_names","kind":"List","info":"List of alternative names."},{"word":"auto_renew","kind":"Bool","info":"If enabled, a new certificate will be generated if the expiration is within min_seconds_remaining"},{"word":"backend","kind":"String","info":"The PKI secret backend the resource belongs to."},{"word":"ca_chain","kind":"String","info":"The CA chain."},{"word":"certificate","kind":"String","info":"The certicate."},{"word":"common_name","kind":"String","info":"CN of intermediate to create."},{"word":"csr","kind":"String","info":"The CSR."},{"word":"exclude_cn_from_sans","kind":"Bool","info":"Flag to exclude CN from SANs."},{"word":"expiration","kind":"Int","info":"The certificate expiration."},{"word":"format","kind":"String","info":"The format of data."},{"word":"ip_sans","kind":"List","info":"List of alternative IPs."},{"word":"issuing_ca","kind":"String","info":"The issuing CA."},{"word":"min_seconds_remaining","kind":"Int","info":"Generate a new certificate when the expiration is within this number of seconds"},{"word":"name","kind":"String","info":"Name of the role to create the certificate against."},{"word":"other_sans","kind":"List","info":"List of other SANs."},{"word":"serial","kind":"String","info":"The serial."},{"word":"ttl","kind":"String","info":"Time to leave."},{"word":"uri_sans","kind":"List","info":"List of alterative URIs."},{"word":"id","kind":"String"}]},"policy":{"arguments":[{"word":"name","kind":"String(R)","info":"Name of the policy"},{"word":"policy","kind":"String(R)","info":"The policy document"}],"attributes":[{"word":"name","kind":"String","info":"Name of the policy"},{"word":"policy","kind":"String","info":"The policy document"},{"word":"id","kind":"String"}]},"rabbitmq_secret_backend":{"arguments":[{"word":"connection_uri","kind":"String(R)","info":"Specifies the RabbitMQ connection URI."},{"word":"default_lease_ttl_seconds","kind":"Int(O)","info":"Default lease duration for secrets in seconds"},{"word":"description","kind":"String(O)","info":"Human-friendly description of the mount for the backend."},{"word":"max_lease_ttl_seconds","kind":"Int(O)","info":"Maximum possible lease duration for secrets in seconds"},{"word":"password","kind":"String(R)","info":"Specifies the RabbitMQ management administrator password"},{"word":"path","kind":"String(O)","info":"The path of the RabbitMQ Secret Backend where the connection should be configured"},{"word":"username","kind":"String(R)","info":"Specifies the RabbitMQ management administrator username"},{"word":"verify_connection","kind":"Bool(O)","info":"Specifies whether to verify connection URI, username, and password."}],"attributes":[{"word":"connection_uri","kind":"String","info":"Specifies the RabbitMQ connection URI."},{"word":"default_lease_ttl_seconds","kind":"Int","info":"Default lease duration for secrets in seconds"},{"word":"description","kind":"String","info":"Human-friendly description of the mount for the backend."},{"word":"max_lease_ttl_seconds","kind":"Int","info":"Maximum possible lease duration for secrets in seconds"},{"word":"password","kind":"String","info":"Specifies the RabbitMQ management administrator password"},{"word":"path","kind":"String","info":"The path of the RabbitMQ Secret Backend where the connection should be configured"},{"word":"username","kind":"String","info":"Specifies the RabbitMQ management administrator username"},{"word":"verify_connection","kind":"Bool","info":"Specifies whether to verify connection URI, username, and password."},{"word":"id","kind":"String"}]},"rabbitmq_secret_backend_role":{"arguments":[{"word":"backend","kind":"String(R)","info":"The path of the Rabbitmq Secret Backend the role belongs to."},{"word":"name","kind":"String(R)","info":"Unique name for the role."},{"word":"tags","kind":"String(O)","info":"Specifies a comma-separated RabbitMQ management tags."},{"word":"vhosts","kind":"String(O)","info":"Specifies a map of virtual hosts to permissions."}],"attributes":[{"word":"backend","kind":"String","info":"The path of the Rabbitmq Secret Backend the role belongs to."},{"word":"name","kind":"String","info":"Unique name for the role."},{"word":"tags","kind":"String","info":"Specifies a comma-separated RabbitMQ management tags."},{"word":"vhosts","kind":"String","info":"Specifies a map of virtual hosts to permissions."},{"word":"id","kind":"String"}]},"rgp_policy":{"arguments":[{"word":"enforcement_level","kind":"String(R)","info":"Enforcement level of Sentinel policy. Can be one of: 'advisory', 'soft-mandatory' or 'hard-mandatory'"},{"word":"name","kind":"String(R)","info":"Name of the policy"},{"word":"policy","kind":"String(R)","info":"The policy document"}],"attributes":[{"word":"enforcement_level","kind":"String","info":"Enforcement level of Sentinel policy. Can be one of: 'advisory', 'soft-mandatory' or 'hard-mandatory'"},{"word":"name","kind":"String","info":"Name of the policy"},{"word":"policy","kind":"String","info":"The policy document"},{"word":"id","kind":"String"}]},"ssh_secret_backend_ca":{"arguments":[{"word":"backend","kind":"String(O)","info":"The path of the SSH Secret Backend where the CA should be configured"},{"word":"generate_signing_key","kind":"Bool(O)","info":"Whether Vault should generate the signing key pair internally."},{"word":"private_key","kind":"String(O)","info":"Private key part the SSH CA key pair; required if generate_signing_key is false."},{"word":"public_key","kind":"String(O)","info":"Public key part the SSH CA key pair; required if generate_signing_key is false."}],"attributes":[{"word":"backend","kind":"String","info":"The path of the SSH Secret Backend where the CA should be configured"},{"word":"generate_signing_key","kind":"Bool","info":"Whether Vault should generate the signing key pair internally."},{"word":"private_key","kind":"String","info":"Private key part the SSH CA key pair; required if generate_signing_key is false."},{"word":"public_key","kind":"String","info":"Public key part the SSH CA key pair; required if generate_signing_key is false."},{"word":"id","kind":"String"}]},"ssh_secret_backend_role":{"arguments":[{"word":"allow_bare_domains","kind":"Bool(O)"},{"word":"allow_host_certificates","kind":"Bool(O)"},{"word":"allow_subdomains","kind":"Bool(O)"},{"word":"allow_user_certificates","kind":"Bool(O)"},{"word":"allow_user_key_ids","kind":"Bool(O)"},{"word":"allowed_critical_options","kind":"String(O)"},{"word":"allowed_domains","kind":"String(O)"},{"word":"allowed_extensions","kind":"String(O)"},{"word":"allowed_users","kind":"String(O)"},{"word":"backend","kind":"String(R)"},{"word":"cidr_list","kind":"String(O)"},{"word":"default_critical_options","kind":"Map(O)"},{"word":"default_extensions","kind":"Map(O)"},{"word":"default_user","kind":"String(O)"},{"word":"key_id_format","kind":"String(O)"},{"word":"key_type","kind":"String(R)"},{"word":"max_ttl","kind":"String(O)"},{"word":"name","kind":"String(R)","info":"Unique name for the role."},{"word":"ttl","kind":"String(O)"}],"attributes":[{"word":"allow_bare_domains","kind":"Bool"},{"word":"allow_host_certificates","kind":"Bool"},{"word":"allow_subdomains","kind":"Bool"},{"word":"allow_user_certificates","kind":"Bool"},{"word":"allow_user_key_ids","kind":"Bool"},{"word":"allowed_critical_options","kind":"String"},{"word":"allowed_domains","kind":"String"},{"word":"allowed_extensions","kind":"String"},{"word":"allowed_users","kind":"String"},{"word":"backend","kind":"String"},{"word":"cidr_list","kind":"String"},{"word":"default_critical_options","kind":"Map"},{"word":"default_extensions","kind":"Map"},{"word":"default_user","kind":"String"},{"word":"key_id_format","kind":"String"},{"word":"key_type","kind":"String"},{"word":"max_ttl","kind":"String"},{"word":"name","kind":"String","info":"Unique name for the role."},{"word":"ttl","kind":"String"},{"word":"id","kind":"String"}]},"token":{"arguments":[{"word":"display_name","kind":"String(O)","info":"The display name of the token."},{"word":"explicit_max_ttl","kind":"String(O)","info":"The explicit max TTL of the token."},{"word":"no_default_policy","kind":"Bool(O)","info":"Flag to disable the default policy."},{"word":"no_parent","kind":"Bool(O)","info":"Flag to create a token without parent."},{"word":"num_uses","kind":"Int(O)","info":"The number of allowed uses of the token."},{"word":"period","kind":"String(O)","info":"The period of the token."},{"word":"policies","kind":"Set(O)","info":"List of policies."},{"word":"renew_increment","kind":"Int(O)","info":"The renew increment."},{"word":"renew_min_lease","kind":"Int(O)","info":"The minimum lease to renew token."},{"word":"renewable","kind":"Bool(O)","info":"Flag to allow the token to be renewed"},{"word":"role_name","kind":"String(O)","info":"The token role name."},{"word":"ttl","kind":"String(O)","info":"The TTL period of the token."},{"word":"wrapping_ttl","kind":"String(O)","info":"The TTL period of the wrapped token."}],"attributes":[{"word":"client_token","kind":"String","info":"The client token."},{"word":"display_name","kind":"String","info":"The display name of the token."},{"word":"explicit_max_ttl","kind":"String","info":"The explicit max TTL of the token."},{"word":"lease_duration","kind":"Int","info":"The token lease duration."},{"word":"lease_started","kind":"String","info":"The token lease started on."},{"word":"no_default_policy","kind":"Bool","info":"Flag to disable the default policy."},{"word":"no_parent","kind":"Bool","info":"Flag to create a token without parent."},{"word":"num_uses","kind":"Int","info":"The number of allowed uses of the token."},{"word":"period","kind":"String","info":"The period of the token."},{"word":"policies","kind":"Set","info":"List of policies."},{"word":"renew_increment","kind":"Int","info":"The renew increment."},{"word":"renew_min_lease","kind":"Int","info":"The minimum lease to renew token."},{"word":"renewable","kind":"Bool","info":"Flag to allow the token to be renewed"},{"word":"role_name","kind":"String","info":"The token role name."},{"word":"ttl","kind":"String","info":"The TTL period of the token."},{"word":"wrapped_token","kind":"String","info":"The client wrapped token."},{"word":"wrapping_accessor","kind":"String","info":"The client wrapping accessor."},{"word":"wrapping_ttl","kind":"String","info":"The TTL period of the wrapped token."},{"word":"id","kind":"String"}]},"token_auth_backend_role":{"arguments":[{"word":"allowed_policies","kind":"Set(O)","info":"List of allowed policies for given role."},{"word":"bound_cidrs","kind":"Set(O)","info":"If set, restricts usage of the generated token to client IPs falling within the range of the specified CIDR(s)."},{"word":"disallowed_policies","kind":"Set(O)","info":"List of disallowed policies for given role."},{"word":"explicit_max_ttl","kind":"String(O)","info":"If set, the token will have an explicit max TTL set upon it."},{"word":"orphan","kind":"Bool(O)","info":"If true, tokens created against this policy will be orphan tokens."},{"word":"path_suffix","kind":"String(O)","info":"Tokens created against this role will have the given suffix as part of their path in addition to the role name."},{"word":"period","kind":"String(O)","info":"The duration in which a token should be renewed. At each renewal, the token's TTL will be set to the value of this parameter."},{"word":"renewable","kind":"Bool(O)","info":"Whether to disable the ability of the token to be renewed past its initial TTL."},{"word":"role_name","kind":"String(R)","info":"Name of the role."},{"word":"token_type","kind":"String(O)","info":"Specifies the type of tokens that should be returned by the role. If either service or batch is specified, that kind of token will always be returned."}],"attributes":[{"word":"allowed_policies","kind":"Set","info":"List of allowed policies for given role."},{"word":"bound_cidrs","kind":"Set","info":"If set, restricts usage of the generated token to client IPs falling within the range of the specified CIDR(s)."},{"word":"disallowed_policies","kind":"Set","info":"List of disallowed policies for given role."},{"word":"explicit_max_ttl","kind":"String","info":"If set, the token will have an explicit max TTL set upon it."},{"word":"orphan","kind":"Bool","info":"If true, tokens created against this policy will be orphan tokens."},{"word":"path_suffix","kind":"String","info":"Tokens created against this role will have the given suffix as part of their path in addition to the role name."},{"word":"period","kind":"String","info":"The duration in which a token should be renewed. At each renewal, the token's TTL will be set to the value of this parameter."},{"word":"renewable","kind":"Bool","info":"Whether to disable the ability of the token to be renewed past its initial TTL."},{"word":"role_name","kind":"String","info":"Name of the role."},{"word":"token_type","kind":"String","info":"Specifies the type of tokens that should be returned by the role. If either service or batch is specified, that kind of token will always be returned."},{"word":"id","kind":"String"}]}},"datas":{"approle_auth_backend_role_id":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the auth backend to configure."},{"word":"role_name","kind":"String(R)","info":"Name of the role."}],"attributes":[{"word":"backend","kind":"String","info":"Unique name of the auth backend to configure."},{"word":"role_id","kind":"String","info":"The RoleID of the role."},{"word":"role_name","kind":"String","info":"Name of the role."},{"word":"id","kind":"String"}]},"aws_access_credentials":{"arguments":[{"word":"backend","kind":"String(R)","info":"AWS Secret Backend to read credentials from."},{"word":"role","kind":"String(R)","info":"AWS Secret Role to read credentials from."},{"word":"type","kind":"String(O)","info":"Type of credentials to read. Must be either 'creds' for Access Key and Secret Key, or 'sts' for STS."}],"attributes":[{"word":"access_key","kind":"String","info":"AWS access key ID read from Vault."},{"word":"backend","kind":"String","info":"AWS Secret Backend to read credentials from."},{"word":"lease_duration","kind":"Int","info":"Lease duration in seconds relative to the time in lease_start_time."},{"word":"lease_id","kind":"String","info":"Lease identifier assigned by vault."},{"word":"lease_renewable","kind":"Bool","info":"True if the duration of this lease can be extended through renewal."},{"word":"lease_start_time","kind":"String","info":"Time at which the lease was read, using the clock of the system where Terraform was running"},{"word":"role","kind":"String","info":"AWS Secret Role to read credentials from."},{"word":"secret_key","kind":"String","info":"AWS secret key read from Vault."},{"word":"security_token","kind":"String","info":"AWS security token read from Vault. (Only returned if type is 'sts'.)"},{"word":"type","kind":"String","info":"Type of credentials to read. Must be either 'creds' for Access Key and Secret Key, or 'sts' for STS."},{"word":"id","kind":"String"}]},"generic_secret":{"arguments":[{"word":"path","kind":"String(R)","info":"Full path from which a secret will be read."},{"word":"version","kind":"Int(O)"}],"attributes":[{"word":"data","kind":"Map","info":"Map of strings read from Vault."},{"word":"data_json","kind":"String","info":"JSON-encoded secret data read from Vault."},{"word":"lease_duration","kind":"Int","info":"Lease duration in seconds relative to the time in lease_start_time."},{"word":"lease_id","kind":"String","info":"Lease identifier assigned by vault."},{"word":"lease_renewable","kind":"Bool","info":"True if the duration of this lease can be extended through renewal."},{"word":"lease_start_time","kind":"String","info":"Time at which the lease was read, using the clock of the system where Terraform was running"},{"word":"path","kind":"String","info":"Full path from which a secret will be read."},{"word":"version","kind":"Int"},{"word":"id","kind":"String"}]},"kubernetes_auth_backend_config":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the kubernetes backend to configure."},{"word":"kubernetes_ca_cert","kind":"String(O)","info":"PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API."},{"word":"kubernetes_host","kind":"String(O)","info":"Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server."},{"word":"pem_keys","kind":"List(O)","info":"Optional list of PEM-formatted public keys or certificates used to verify the signatures of Kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kubernetes exposes these keys."}],"attributes":[{"word":"backend","kind":"String","info":"Unique name of the kubernetes backend to configure."},{"word":"kubernetes_ca_cert","kind":"String","info":"PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API."},{"word":"kubernetes_host","kind":"String","info":"Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server."},{"word":"pem_keys","kind":"List","info":"Optional list of PEM-formatted public keys or certificates used to verify the signatures of Kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kubernetes exposes these keys."},{"word":"id","kind":"String"}]},"kubernetes_auth_backend_role":{"arguments":[{"word":"backend","kind":"String(O)","info":"Unique name of the kubernetes backend to configure."},{"word":"max_ttl","kind":"Int(O)","info":"The maximum allowed lifetime of tokens issued in seconds using this role."},{"word":"num_uses","kind":"Int(O)","info":"Number of times issued tokens can be used. Setting this to 0 or leaving it unset means unlimited uses."},{"word":"period","kind":"Int(O)","info":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter."},{"word":"policies","kind":"Set(O)","info":"Policies to be set on tokens issued using this role."},{"word":"role_name","kind":"String(R)","info":"Name of the role."},{"word":"ttl","kind":"Int(O)","info":"The TTL period of tokens issued using this role in seconds."}],"attributes":[{"word":"backend","kind":"String","info":"Unique name of the kubernetes backend to configure."},{"word":"bound_cidrs","kind":"Set","info":"List of CIDR blocks. If set, specifies the blocks of IP addresses which can perform the login operation."},{"word":"bound_service_account_names","kind":"Set","info":"List of service account names able to access this role. If set to \"*\" all names are allowed, both this and bound_service_account_namespaces can not be \"*\"."},{"word":"bound_service_account_namespaces","kind":"Set","info":"List of namespaces allowed to access this role. If set to \"*\" all namespaces are allowed, both this and bound_service_account_names can not be set to \"*\"."},{"word":"max_ttl","kind":"Int","info":"The maximum allowed lifetime of tokens issued in seconds using this role."},{"word":"num_uses","kind":"Int","info":"Number of times issued tokens can be used. Setting this to 0 or leaving it unset means unlimited uses."},{"word":"period","kind":"Int","info":"If set, indicates that the token generated using this role should never expire. The token should be renewed within the duration specified by this value. At each renewal, the token's TTL will be set to the value of this parameter."},{"word":"policies","kind":"Set","info":"Policies to be set on tokens issued using this role."},{"word":"role_name","kind":"String","info":"Name of the role."},{"word":"ttl","kind":"Int","info":"The TTL period of tokens issued using this role in seconds."},{"word":"id","kind":"String"}]},"policy_document":{"arguments":[{"word":"rule","kind":"List(O)(B)","info":"The policy rule","subblock":[{"word":"allowed_parameter","kind":"List(O)(B)","subblock":[{"word":"key","kind":"String(R)"},{"word":"value","kind":"List(R)"}]},{"word":"capabilities","kind":"List(R)"},{"word":"denied_parameter","kind":"List(O)(B)","subblock":[{"word":"key","kind":"String(R)"},{"word":"value","kind":"List(R)"}]},{"word":"description","kind":"String(O)"},{"word":"max_wrapping_ttl","kind":"String(O)"},{"word":"min_wrapping_ttl","kind":"String(O)"},{"word":"path","kind":"String(R)"},{"word":"required_parameters","kind":"List(O)"}]}],"attributes":[{"word":"hcl","kind":"String"},{"word":"rule","kind":"List(B)","info":"The policy rule","subblock":[{"word":"allowed_parameter","kind":"List(B)","subblock":[{"word":"key","kind":"String"},{"word":"value","kind":"List"},{"word":"id","kind":"String"}]},{"word":"capabilities","kind":"List"},{"word":"denied_parameter","kind":"List(B)","subblock":[{"word":"key","kind":"String"},{"word":"value","kind":"List"},{"word":"id","kind":"String"}]},{"word":"description","kind":"String"},{"word":"max_wrapping_ttl","kind":"String"},{"word":"min_wrapping_ttl","kind":"String"},{"word":"path","kind":"String"},{"word":"required_parameters","kind":"List"},{"word":"id","kind":"String"}]},{"word":"id","kind":"String"}]}},"unknowns":{}}